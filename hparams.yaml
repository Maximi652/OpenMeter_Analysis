attention_head_size: 4
categorical_groups: {}
causal_attention: true
dataset_parameters:
  add_encoder_length: true
  add_relative_time_idx: true
  add_target_scales: true
  allow_missing_timesteps: true
  categorical_encoders:
    __group_id__meter_id: !!python/object:pytorch_forecasting.data.encoders.NaNLabelEncoder
      add_nan: false
      classes_:
        0079edf0-c6be-4945-b1aa-f8f985952f68: 0
        0098a6f4-3239-44a5-9a3e-ce972346e682: 1
        048825bd-2b0e-4b3d-960d-f65a8c9b6ed8: 2
        05ef25da-1f2f-4789-bc9b-b472a49196c9: 3
        0f1cce70-4f32-4a50-9dc7-66c019c7cf3a: 4
        136c331c-db9a-4bf0-b7f5-69435cb81583: 5
        145822f3-be35-4d07-a119-d12b6c066ee9: 6
        1508cb1f-8333-461d-9298-97d1b23a4bfb: 7
        1696046d-41d4-41dd-bcef-d2f21a988b50: 8
        18d9d0fd-0c60-41ab-896f-2894c87e1239: 9
        193be419-76d3-418f-84de-c58dc73082c4: 10
        1946227b-c5ed-4d65-a5d0-70049473e919: 11
        1a06d387-3541-406a-9c84-e9956ea9cc94: 12
        1df2bb3b-058b-4121-8dbb-c2a6203aca3b: 13
        1fe34333-5155-4a46-b18d-298d92687316: 14
        20480ee8-ca99-44da-b0d0-6ce2d2e1fcb2: 15
        275b323d-53a9-4757-a473-2fa11dbe77fe: 16
        29ebf833-c223-48f6-b1e7-cbf0a4e6abf3: 17
        2c1089ac-e9c8-4dea-891f-43fb932aa6f9: 18
        2cd15571-1c9f-4764-a281-861f4ad8f5d3: 19
        2d6a9c76-9a54-417a-ba6e-f402938e2cb1: 20
        3010a87b-9a22-4187-bb7f-8925d086d0f2: 21
        30841558-04f2-44d3-9b82-19bab5fc68be: 22
        318f713a-ebe9-45e1-9f0c-101e4bb1bb0e: 23
        31b3c536-753d-4c59-8634-c6ef7eb1ead4: 24
        32d2625c-8080-4b81-a102-6fa9970d275a: 25
        332fd5b7-be77-4e39-ab4e-65fe177bdfcc: 26
        34f2f848-3dda-47db-87d2-065f751356ec: 27
        390e6930-ba01-4996-9617-cf29b0aaf8d4: 28
        3cda0a48-584f-4b39-9075-e75f3e46cbac: 29
        3d406a2c-bf53-45a8-b3bd-e5aff06e7b95: 30
        3df8ec3c-6b6c-4ab8-a932-cdbfd6991d90: 31
        3e7a2bd8-224d-4433-a59d-ba0c7810aca9: 32
        3f4fa33d-4bc8-4be5-aa42-8b568cfa80cb: 33
        425ab004-f7f1-460f-a1c7-160dc6283e8b: 34
        4b903746-4b3e-41e6-9003-ebe150ae2f61: 35
        4c64e482-8588-43bb-9ae8-c7262c137ffa: 36
        4e7e623a-bda5-49f7-a02c-df84c2f80f77: 37
        515378c1-5853-458a-af90-fafe7849bae1: 38
        5325cd3f-ac3a-44dc-bacf-fe523a6fc0ab: 39
        560c2db0-db56-4c76-a4dc-cf1fcb6fe70e: 40
        589c8600-bdad-4804-86e0-9f893fe1fa8a: 41
        5ab1cda5-5dbb-453c-8631-3442dfd90f6e: 42
        5b939e19-cebc-400a-b3e2-54ef0c1f4756: 43
        5d907e07-088c-445d-a837-936b0b249f5f: 44
        5ed7a38c-ef37-42fd-b9d1-ca7142faf563: 45
        604f8bb0-91c0-44e1-854b-b1588a9447b1: 46
        61a4030e-3018-4602-84f2-436cbd253bd4: 47
        63a06c39-7d7e-457c-b832-8dee5a267f42: 48
        665f242a-f283-4935-9a2a-bcdba0b0c0e6: 49
        6864baef-b07b-4421-b400-2092a977f8cc: 50
        692cfc09-2e09-473e-8008-7bd63c9305df: 51
        696db12a-d47f-44a2-941a-426551a75790: 52
        6afc8694-bc58-4eef-bad6-e74a4170c274: 53
        6d592966-2a2f-456c-bd0a-fc0dd2e0d619: 54
        6ea65117-4fa8-4099-ae61-4619ec980aae: 55
        710b061e-3557-4f04-b4a6-8cd2c2eea555: 56
        71325845-078b-439a-a27c-df49a583653e: 57
        7214109e-3153-466b-9a44-978eee87565b: 58
        73625891-06c1-4954-a0a4-8f103a49fdfb: 59
        73a427fe-ed60-4d80-93bc-427031cb465a: 60
        7452b0cf-67c8-4d75-8e83-40a7e3c7b896: 61
        76e8b7b8-6483-4843-bb72-1d235cc888ab: 62
        7a7fe423-e1ff-4fff-99c5-7e514913cddc: 63
        83cb3524-9f5a-4fe1-9e3e-abc465381da1: 64
        8bfe62ef-5cd2-45a8-aa21-e3653b57cb3d: 65
        9164fe22-56a2-4f8d-943e-5904381ce1e6: 66
        927a3bca-cdd7-4dc6-93a7-221595bad81f: 67
        975b192b-4f83-483d-8a96-6d4ce451dffd: 68
        976bbb14-bfca-458f-9051-2999484a3450: 69
        9aee65eb-b8a2-41a0-b0bf-599a7b5b4eca: 70
        9b019662-9973-4ea8-9882-8462b6fe4eda: 71
        9ccfb79a-8a67-4385-8fb1-95a2bfa2a644: 72
        9fc077fa-5d55-4e5c-8c66-c800354541bd: 73
        a07e9aa1-0a1d-4b82-926b-acab5eb5df7f: 74
        a2e2b084-88db-4c47-aac3-641886afc296: 75
        ab41a510-f017-4e9b-937a-4e6569b75609: 76
        abd7b08a-2f1a-435e-98e0-5bd2bb31fe15: 77
        ad759d34-5e58-4f6e-b04e-a32bb094ca23: 78
        b128af02-5e4d-4643-b1e4-32959cb4947b: 79
        b14821e4-139c-48f1-8944-06a2073f5301: 80
        b2a2d546-1436-48c3-a1e0-5811ea303328: 81
        b467871e-1eab-4001-bfdb-1ff81ce8b016: 82
        b7258783-b977-4611-8bd3-ca06ad68f67c: 83
        b75253ea-7bd3-42d7-9734-b3c9b661a9b6: 84
        b94b2476-de4f-40a5-b6f4-9bc93322620f: 85
        ba0dfbde-8c4a-431f-a67e-e7d35a7a231e: 86
        bd3fbffe-1a75-4f42-97b7-425e6ce6fc92: 87
        c0b1c7be-1f58-42ae-8ba0-186d6a5731d5: 88
        c1ce5a0b-e28a-4ea6-9547-2f1dc65e8a5d: 89
        c40afa5d-ddfb-4be3-ac01-8884db4ee7b8: 90
        c5d97031-4e34-4058-8f21-758542d14deb: 91
        c7eab618-aee1-4e8f-b3a9-8cf629ddce19: 92
        cbc6fd8d-82a3-40d5-88cf-e12be767c739: 93
        cd0b4773-4fa8-451a-b192-4992e794188f: 94
        ce99cb3a-9cce-4d11-ad08-2d8cc5e177cb: 95
        cee5a91d-b7ab-48b1-8443-7763d2846759: 96
        cfb4ba2f-6e46-434f-99eb-ba9d59000ffe: 97
        cfed821c-053a-4fa6-a77e-36100e163814: 98
        d0a43a28-20fa-4dda-a897-d65f080f7e39: 99
        d4d411bd-1fec-4b55-9fa2-307b4b18e2f6: 100
        da375c75-19ed-4138-b736-a4784e49a9b8: 101
        dba0d537-34f8-4274-9af4-bd94ab4af03e: 102
        dc861739-ce9e-40e6-92ee-1b41fa06705c: 103
        dce65d19-9bbe-4380-bf98-8f20b1e9bdce: 104
        dd9516b0-4e92-4bd6-b22c-789425c3ab51: 105
        e66c4160-eaa2-4819-82bc-5e31de746e25: 106
        e6a91909-80a3-4aae-8c7f-a9c5e0d47b09: 107
        e9125f78-8ad0-40ae-8289-6e78b73f0e9e: 108
        ec212792-ce52-4e7a-93a7-5f630b32c2f7: 109
        f6f5994c-cc7d-4a61-9e4f-716a5714c58c: 110
        f774b2b4-dd50-4dff-95c6-a51d3897cd4c: 111
        fa401e78-ef3a-4cc9-b392-10246ee30fe9: 112
        fc174751-3e4c-4213-bc39-eacaa93d6c22: 113
        fdf463a1-5596-4c53-a8cf-c0ff18e6f199: 114
      classes_vector_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - &id001 !!python/name:numpy.ndarray ''
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 115
        - !!python/object/apply:numpy.dtype
          args:
          - U36
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - 144
          - 4
          - 8
        - false
        - !!binary |
          MAAAADAAAAA3AAAAOQAAAGUAAABkAAAAZgAAADAAAAAtAAAAYwAAADYAAABiAAAAZQAAAC0AAAA0
          AAAAOQAAADQAAAA1AAAALQAAAGIAAAAxAAAAYQAAAGEAAAAtAAAAZgAAADgAAABmAAAAOQAAADgA
          AAA1AAAAOQAAADUAAAAyAAAAZgAAADYAAAA4AAAAMAAAADAAAAA5AAAAOAAAAGEAAAA2AAAAZgAA
          ADQAAAAtAAAAMwAAADIAAAAzAAAAOQAAAC0AAAA0AAAANAAAAGEAAAA1AAAALQAAADkAAABhAAAA
          MwAAAGUAAAAtAAAAYwAAAGUAAAA5AAAANwAAADIAAAAzAAAANAAAADYAAABlAAAANgAAADgAAAAy
          AAAAMAAAADQAAAA4AAAAOAAAADIAAAA1AAAAYgAAAGQAAAAtAAAAMgAAAGIAAAAwAAAAZQAAAC0A
          AAA0AAAAYgAAADMAAABkAAAALQAAADkAAAA2AAAAMAAAAGQAAAAtAAAAZgAAADYAAAA1AAAAYQAA
          ADgAAABjAAAAOQAAAGIAAAA2AAAAZQAAAGQAAAA4AAAAMAAAADUAAABlAAAAZgAAADIAAAA1AAAA
          ZAAAAGEAAAAtAAAAMQAAAGYAAAAyAAAAZgAAAC0AAAA0AAAANwAAADgAAAA5AAAALQAAAGIAAABj
          AAAAOQAAAGIAAAAtAAAAYgAAADQAAAA3AAAAMgAAAGEAAAA0AAAAOQAAADEAAAA5AAAANgAAAGMA
          AAA5AAAAMAAAAGYAAAAxAAAAYwAAAGMAAABlAAAANwAAADAAAAAtAAAANAAAAGYAAAAzAAAAMgAA
          AC0AAAA0AAAAYQAAADUAAAAwAAAALQAAADkAAABkAAAAYwAAADcAAAAtAAAANgAAADYAAABjAAAA
          MAAAADEAAAA5AAAAYwAAADcAAABjAAAAZgAAADMAAABhAAAAMQAAADMAAAA2AAAAYwAAADMAAAAz
          AAAAMQAAAGMAAAAtAAAAZAAAAGIAAAA5AAAAYQAAAC0AAAA0AAAAYgAAAGYAAAAwAAAALQAAAGIA
          AAA3AAAAZgAAADUAAAAtAAAANgAAADkAAAA0AAAAMwAAADUAAABjAAAAYgAAADgAAAAxAAAANQAA
          ADgAAAAzAAAAMQAAADQAAAA1AAAAOAAAADIAAAAyAAAAZgAAADMAAAAtAAAAYgAAAGUAAAAzAAAA
          NQAAAC0AAAA0AAAAZAAAADAAAAA3AAAALQAAAGEAAAAxAAAAMQAAADkAAAAtAAAAZAAAADEAAAAy
          AAAAYgAAADYAAABjAAAAMAAAADYAAAA2AAAAZQAAAGUAAAA5AAAAMQAAADUAAAAwAAAAOAAAAGMA
          AABiAAAAMQAAAGYAAAAtAAAAOAAAADMAAAAzAAAAMwAAAC0AAAA0AAAANgAAADEAAABkAAAALQAA
          ADkAAAAyAAAAOQAAADgAAAAtAAAAOQAAADcAAABkAAAAMQAAAGIAAAAyAAAAMwAAAGEAAAA0AAAA
          YgAAAGYAAABiAAAAMQAAADYAAAA5AAAANgAAADAAAAA0AAAANgAAAGQAAAAtAAAANAAAADEAAABk
          AAAANAAAAC0AAAA0AAAAMQAAAGQAAABkAAAALQAAAGIAAABjAAAAZQAAAGYAAAAtAAAAZAAAADIA
          AABmAAAAMgAAADEAAABhAAAAOQAAADgAAAA4AAAAYgAAADUAAAAwAAAAMQAAADgAAABkAAAAOQAA
          AGQAAAAwAAAAZgAAAGQAAAAtAAAAMAAAAGMAAAA2AAAAMAAAAC0AAAA0AAAAMQAAAGEAAABiAAAA
          LQAAADgAAAA5AAAANgAAAGYAAAAtAAAAMgAAADgAAAA5AAAANAAAAGMAAAA4AAAANwAAAGUAAAAx
          AAAAMgAAADMAAAA5AAAAMQAAADkAAAAzAAAAYgAAAGUAAAA0AAAAMQAAADkAAAAtAAAANwAAADYA
          AABkAAAAMwAAAC0AAAA0AAAAMQAAADgAAABmAAAALQAAADgAAAA0AAAAZAAAAGUAAAAtAAAAYwAA
          ADUAAAA4AAAAZAAAAGMAAAA3AAAAMwAAADAAAAA4AAAAMgAAAGMAAAA0AAAAMQAAADkAAAA0AAAA
          NgAAADIAAAAyAAAANwAAAGIAAAAtAAAAYwAAADUAAABlAAAAZAAAAC0AAAA0AAAAZAAAADYAAAA1
          AAAALQAAAGEAAAA1AAAAZAAAADAAAAAtAAAANwAAADAAAAAwAAAANAAAADkAAAA0AAAANwAAADMA
          AABlAAAAOQAAADEAAAA5AAAAMQAAAGEAAAAwAAAANgAAAGQAAAAzAAAAOAAAADcAAAAtAAAAMwAA
          ADUAAAA0AAAAMQAAAC0AAAA0AAAAMAAAADYAAABhAAAALQAAADkAAABjAAAAOAAAADQAAAAtAAAA
          ZQAAADkAAAA5AAAANQAAADYAAABlAAAAYQAAADkAAABjAAAAYwAAADkAAAA0AAAAMQAAAGQAAABm
          AAAAMgAAAGIAAABiAAAAMwAAAGIAAAAtAAAAMAAAADUAAAA4AAAAYgAAAC0AAAA0AAAAMQAAADIA
          AAAxAAAALQAAADgAAABkAAAAYgAAAGIAAAAtAAAAYwAAADIAAABhAAAANgAAADIAAAAwAAAAMwAA
          AGEAAABjAAAAYQAAADMAAABiAAAAMQAAAGYAAABlAAAAMwAAADQAAAAzAAAAMwAAADMAAAAtAAAA
          NQAAADEAAAA1AAAANQAAAC0AAAA0AAAAYQAAADQAAAA2AAAALQAAAGIAAAAxAAAAOAAAAGQAAAAt
          AAAAMgAAADkAAAA4AAAAZAAAADkAAAAyAAAANgAAADgAAAA3AAAAMwAAADEAAAA2AAAAMgAAADAA
          AAA0AAAAOAAAADAAAABlAAAAZQAAADgAAAAtAAAAYwAAAGEAAAA5AAAAOQAAAC0AAAA0AAAANAAA
          AGQAAABhAAAALQAAAGIAAAAwAAAAZAAAADAAAAAtAAAANgAAAGMAAABlAAAAMgAAAGQAAAAyAAAA
          ZQAAADEAAABmAAAAYwAAAGIAAAAyAAAAMgAAADcAAAA1AAAAYgAAADMAAAAyAAAAMwAAAGQAAAAt
          AAAANQAAADMAAABhAAAAOQAAAC0AAAA0AAAANwAAADUAAAA3AAAALQAAAGEAAAA0AAAANwAAADMA
          AAAtAAAAMgAAAGYAAABhAAAAMQAAADEAAABkAAAAYgAAAGUAAAA3AAAANwAAAGYAAABlAAAAMgAA
          ADkAAABlAAAAYgAAAGYAAAA4AAAAMwAAADMAAAAtAAAAYwAAADIAAAAyAAAAMwAAAC0AAAA0AAAA
          OAAAAGYAAAA2AAAALQAAAGIAAAAxAAAAZQAAADcAAAAtAAAAYwAAAGIAAABmAAAAMAAAAGEAAAA0
          AAAAZQAAADYAAABhAAAAYgAAAGYAAAAzAAAAMgAAAGMAAAAxAAAAMAAAADgAAAA5AAAAYQAAAGMA
          AAAtAAAAZQAAADkAAABjAAAAOAAAAC0AAAA0AAAAZAAAAGUAAABhAAAALQAAADgAAAA5AAAAMQAA
          AGYAAAAtAAAANAAAADMAAABmAAAAYgAAADkAAAAzAAAAMgAAAGEAAABhAAAANgAAAGYAAAA5AAAA
          MgAAAGMAAABkAAAAMQAAADUAAAA1AAAANwAAADEAAAAtAAAAMQAAAGMAAAA5AAAAZgAAAC0AAAA0
          AAAANwAAADYAAAA0AAAALQAAAGEAAAAyAAAAOAAAADEAAAAtAAAAOAAAADYAAAAxAAAAZgAAADQA
          AABhAAAAZAAAADgAAABmAAAANQAAAGQAAAAzAAAAMgAAAGQAAAA2AAAAYQAAADkAAABjAAAANwAA
          ADYAAAAtAAAAOQAAAGEAAAA1AAAANAAAAC0AAAA0AAAAMQAAADcAAABhAAAALQAAAGIAAABhAAAA
          NgAAAGUAAAAtAAAAZgAAADQAAAAwAAAAMgAAADkAAAAzAAAAOAAAAGUAAAAyAAAAYwAAAGIAAAAx
          AAAAMwAAADAAAAAxAAAAMAAAAGEAAAA4AAAANwAAAGIAAAAtAAAAOQAAAGEAAAAyAAAAMgAAAC0A
          AAA0AAAAMQAAADgAAAA3AAAALQAAAGIAAABiAAAANwAAAGYAAAAtAAAAOAAAADkAAAAyAAAANQAA
          AGQAAAAwAAAAOAAAADYAAABkAAAAMAAAAGYAAAAyAAAAMwAAADAAAAA4AAAANAAAADEAAAA1AAAA
          NQAAADgAAAAtAAAAMAAAADQAAABmAAAAMgAAAC0AAAA0AAAANAAAAGQAAAAzAAAALQAAADkAAABi
          AAAAOAAAADIAAAAtAAAAMQAAADkAAABiAAAAYQAAAGIAAAA1AAAAZgAAAGMAAAA2AAAAOAAAAGIA
          AABlAAAAMwAAADEAAAA4AAAAZgAAADcAAAAxAAAAMwAAAGEAAAAtAAAAZQAAAGIAAABlAAAAOQAA
          AC0AAAA0AAAANQAAAGUAAAAxAAAALQAAADkAAABmAAAAMAAAAGMAAAAtAAAAMQAAADAAAAAxAAAA
          ZQAAADQAAABiAAAAYgAAADEAAABiAAAAYgAAADAAAABlAAAAMwAAADEAAABiAAAAMwAAAGMAAAA1
          AAAAMwAAADYAAAAtAAAANwAAADUAAAAzAAAAZAAAAC0AAAA0AAAAYwAAADUAAAA5AAAALQAAADgA
          AAA2AAAAMwAAADQAAAAtAAAAYwAAADYAAABlAAAAZgAAADcAAABlAAAAYgAAADEAAABlAAAAYQAA
          AGQAAAA0AAAAMwAAADIAAABkAAAAMgAAADYAAAAyAAAANQAAAGMAAAAtAAAAOAAAADAAAAA4AAAA
          MAAAAC0AAAA0AAAAYgAAADgAAAAxAAAALQAAAGEAAAAxAAAAMAAAADIAAAAtAAAANgAAAGYAAABh
          AAAAOQAAADkAAAA3AAAAMAAAAGQAAAAyAAAANwAAADUAAABhAAAAMwAAADMAAAAyAAAAZgAAAGQA
          AAA1AAAAYgAAADcAAAAtAAAAYgAAAGUAAAA3AAAANwAAAC0AAAA0AAAAZQAAADMAAAA5AAAALQAA
          AGEAAABiAAAANAAAAGUAAAAtAAAANgAAADUAAABmAAAAZQAAADEAAAA3AAAANwAAAGIAAABkAAAA
          ZgAAAGMAAABjAAAAMwAAADQAAABmAAAAMgAAAGYAAAA4AAAANAAAADgAAAAtAAAAMwAAAGQAAABk
          AAAAYQAAAC0AAAA0AAAANwAAAGQAAABiAAAALQAAADgAAAA3AAAAZAAAADIAAAAtAAAAMAAAADYA
          AAA1AAAAZgAAADcAAAA1AAAAMQAAADMAAAA1AAAANgAAAGUAAABjAAAAMwAAADkAAAAwAAAAZQAA
          ADYAAAA5AAAAMwAAADAAAAAtAAAAYgAAAGEAAAAwAAAAMQAAAC0AAAA0AAAAOQAAADkAAAA2AAAA
          LQAAADkAAAA2AAAAMQAAADcAAAAtAAAAYwAAAGYAAAAyAAAAOQAAAGIAAAAwAAAAYQAAAGEAAABm
          AAAAOAAAAGQAAAA0AAAAMwAAAGMAAABkAAAAYQAAADAAAABhAAAANAAAADgAAAAtAAAANQAAADgA
          AAA0AAAAZgAAAC0AAAA0AAAAYgAAADMAAAA5AAAALQAAADkAAAAwAAAANwAAADUAAAAtAAAAZQAA
          ADcAAAA1AAAAZgAAADMAAABlAAAANAAAADYAAABjAAAAYgAAAGEAAABjAAAAMwAAAGQAAAA0AAAA
          MAAAADYAAABhAAAAMgAAAGMAAAAtAAAAYgAAAGYAAAA1AAAAMwAAAC0AAAA0AAAANQAAAGEAAAA4
          AAAALQAAAGIAAAAzAAAAYgAAAGQAAAAtAAAAZQAAADUAAABhAAAAZgAAAGYAAAAwAAAANgAAAGUA
          AAA3AAAAYgAAADkAAAA1AAAAMwAAAGQAAABmAAAAOAAAAGUAAABjAAAAMwAAAGMAAAAtAAAANgAA
          AGIAAAA2AAAAYwAAAC0AAAA0AAAAYQAAAGIAAAA4AAAALQAAAGEAAAA5AAAAMwAAADIAAAAtAAAA
          YwAAAGQAAABiAAAAZgAAAGQAAAA2AAAAOQAAADkAAAAxAAAAZAAAADkAAAAwAAAAMwAAAGUAAAA3
          AAAAYQAAADIAAABiAAAAZAAAADgAAAAtAAAAMgAAADIAAAA0AAAAZAAAAC0AAAA0AAAANAAAADMA
          AAAzAAAALQAAAGEAAAA1AAAAOQAAAGQAAAAtAAAAYgAAAGEAAAAwAAAAYwAAADcAAAA4AAAAMQAA
          ADAAAABhAAAAYwAAAGEAAAA5AAAAMwAAAGYAAAA0AAAAZgAAAGEAAAAzAAAAMwAAAGQAAAAtAAAA
          NAAAAGIAAABjAAAAOAAAAC0AAAA0AAAAYgAAAGUAAAA1AAAALQAAAGEAAABhAAAANAAAADIAAAAt
          AAAAOAAAAGIAAAA1AAAANgAAADgAAABjAAAAZgAAAGEAAAA4AAAAMAAAAGMAAABiAAAANAAAADIA
          AAA1AAAAYQAAAGIAAAAwAAAAMAAAADQAAAAtAAAAZgAAADcAAABmAAAAMQAAAC0AAAA0AAAANgAA
          ADAAAABmAAAALQAAAGEAAAAxAAAAYwAAADcAAAAtAAAAMQAAADYAAAAwAAAAZAAAAGMAAAA2AAAA
          MgAAADgAAAAzAAAAZQAAADgAAABiAAAANAAAAGIAAAA5AAAAMAAAADMAAAA3AAAANAAAADYAAAAt
          AAAANAAAAGIAAAAzAAAAZQAAAC0AAAA0AAAAMQAAAGUAAAA2AAAALQAAADkAAAAwAAAAMAAAADMA
          AAAtAAAAZQAAAGIAAABlAAAAMQAAADUAAAAwAAAAYQAAAGUAAAAyAAAAZgAAADYAAAAxAAAANAAA
          AGMAAAA2AAAANAAAAGUAAAA0AAAAOAAAADIAAAAtAAAAOAAAADUAAAA4AAAAOAAAAC0AAAA0AAAA
          MwAAAGIAAABiAAAALQAAADkAAABhAAAAZQAAADgAAAAtAAAAYwAAADcAAAAyAAAANgAAADIAAABj
          AAAAMQAAADMAAAA3AAAAZgAAAGYAAABhAAAANAAAAGUAAAA3AAAAZQAAADYAAAAyAAAAMwAAAGEA
          AAAtAAAAYgAAAGQAAABhAAAANQAAAC0AAAA0AAAAOQAAAGYAAAA3AAAALQAAAGEAAAAwAAAAMgAA
          AGMAAAAtAAAAZAAAAGYAAAA4AAAANAAAAGMAAAAyAAAAZgAAADgAAAAwAAAAZgAAADcAAAA3AAAA
          NQAAADEAAAA1AAAAMwAAADcAAAA4AAAAYwAAADEAAAAtAAAANQAAADgAAAA1AAAAMwAAAC0AAAA0
          AAAANQAAADgAAABhAAAALQAAAGEAAABmAAAAOQAAADAAAAAtAAAAZgAAAGEAAABmAAAAZQAAADcA
          AAA4AAAANAAAADkAAABiAAAAYQAAAGUAAAAxAAAANQAAADMAAAAyAAAANQAAAGMAAABkAAAAMwAA
          AGYAAAAtAAAAYQAAAGMAAAAzAAAAYQAAAC0AAAA0AAAANAAAAGQAAABjAAAALQAAAGIAAABhAAAA
          YwAAAGYAAAAtAAAAZgAAAGUAAAA1AAAAMgAAADMAAABhAAAANgAAAGYAAABjAAAAMAAAAGEAAABi
          AAAANQAAADYAAAAwAAAAYwAAADIAAABkAAAAYgAAADAAAAAtAAAAZAAAAGIAAAA1AAAANgAAAC0A
          AAA0AAAAYwAAADcAAAA2AAAALQAAAGEAAAA0AAAAZAAAAGMAAAAtAAAAYwAAAGYAAAAxAAAAZgAA
          AGMAAABiAAAANgAAAGYAAABlAAAANwAAADAAAABlAAAANQAAADgAAAA5AAAAYwAAADgAAAA2AAAA
          MAAAADAAAAAtAAAAYgAAAGQAAABhAAAAZAAAAC0AAAA0AAAAOAAAADAAAAA0AAAALQAAADgAAAA2
          AAAAZQAAADAAAAAtAAAAOQAAAGYAAAA4AAAAOQAAADMAAABmAAAAZQAAADEAAABmAAAAYQAAADgA
          AABhAAAANQAAAGEAAABiAAAAMQAAAGMAAABkAAAAYQAAADUAAAAtAAAANQAAAGQAAABiAAAAYgAA
          AC0AAAA0AAAANQAAADMAAABjAAAALQAAADgAAAA2AAAAMwAAADEAAAAtAAAAMwAAADQAAAA0AAAA
          MgAAAGQAAABmAAAAZAAAADkAAAAwAAAAZgAAADYAAABlAAAANQAAAGIAAAA5AAAAMwAAADkAAABl
          AAAAMQAAADkAAAAtAAAAYwAAAGUAAABiAAAAYwAAAC0AAAA0AAAAMAAAADAAAABhAAAALQAAAGIA
          AAAzAAAAZQAAADIAAAAtAAAANQAAADQAAABlAAAAZgAAADAAAABjAAAAMQAAAGYAAAA0AAAANwAA
          ADUAAAA2AAAANQAAAGQAAAA5AAAAMAAAADcAAABlAAAAMAAAADcAAAAtAAAAMAAAADgAAAA4AAAA
          YwAAAC0AAAA0AAAANAAAADUAAABkAAAALQAAAGEAAAA4AAAAMwAAADcAAAAtAAAAOQAAADMAAAA2
          AAAAYgAAADAAAABiAAAAMgAAADQAAAA5AAAAZgAAADUAAABmAAAANQAAAGUAAABkAAAANwAAAGEA
          AAAzAAAAOAAAAGMAAAAtAAAAZQAAAGYAAAAzAAAANwAAAC0AAAA0AAAAMgAAAGYAAABkAAAALQAA
          AGIAAAA5AAAAZAAAADEAAAAtAAAAYwAAAGEAAAA3AAAAMQAAADQAAAAyAAAAZgAAAGEAAABmAAAA
          NQAAADYAAAAzAAAANgAAADAAAAA0AAAAZgAAADgAAABiAAAAYgAAADAAAAAtAAAAOQAAADEAAABj
          AAAAMAAAAC0AAAA0AAAANAAAAGUAAAAxAAAALQAAADgAAAA1AAAANAAAAGIAAAAtAAAAYgAAADEA
          AAA1AAAAOAAAADgAAABhAAAAOQAAADQAAAA0AAAANwAAAGIAAAAxAAAANgAAADEAAABhAAAANAAA
          ADAAAAAzAAAAMAAAAGUAAAAtAAAAMwAAADAAAAAxAAAAOAAAAC0AAAA0AAAANgAAADAAAAAyAAAA
          LQAAADgAAAA0AAAAZgAAADIAAAAtAAAANAAAADMAAAA2AAAAYwAAAGIAAABkAAAAMgAAADUAAAAz
          AAAAYgAAAGQAAAA0AAAANgAAADMAAABhAAAAMAAAADYAAABjAAAAMwAAADkAAAAtAAAANwAAAGQA
          AAA3AAAAZQAAAC0AAAA0AAAANQAAADcAAABjAAAALQAAAGIAAAA4AAAAMwAAADIAAAAtAAAAOAAA
          AGQAAABlAAAAZQAAADUAAABhAAAAMgAAADYAAAA3AAAAZgAAADQAAAAyAAAANgAAADYAAAA1AAAA
          ZgAAADIAAAA0AAAAMgAAAGEAAAAtAAAAZgAAADIAAAA4AAAAMwAAAC0AAAA0AAAAOQAAADMAAAA1
          AAAALQAAADkAAABhAAAAMgAAAGEAAAAtAAAAYgAAAGMAAABkAAAAYgAAAGEAAAAwAAAAYgAAADAA
          AABjAAAAMAAAAGUAAAA2AAAANgAAADgAAAA2AAAANAAAAGIAAABhAAAAZQAAAGYAAAAtAAAAYgAA
          ADAAAAA3AAAAYgAAAC0AAAA0AAAANAAAADIAAAAxAAAALQAAAGIAAAA0AAAAMAAAADAAAAAtAAAA
          MgAAADAAAAA5AAAAMgAAAGEAAAA5AAAANwAAADcAAABmAAAAOAAAAGMAAABjAAAANgAAADkAAAAy
          AAAAYwAAAGYAAABjAAAAMAAAADkAAAAtAAAAMgAAAGUAAAAwAAAAOQAAAC0AAAA0AAAANwAAADMA
          AABlAAAALQAAADgAAAAwAAAAMAAAADgAAAAtAAAANwAAAGIAAABkAAAANgAAADMAAABjAAAAOQAA
          ADMAAAAwAAAANQAAAGQAAABmAAAANgAAADkAAAA2AAAAZAAAAGIAAAAxAAAAMgAAAGEAAAAtAAAA
          ZAAAADQAAAA3AAAAZgAAAC0AAAA0AAAANAAAAGEAAAAyAAAALQAAADkAAAA0AAAAMQAAAGEAAAAt
          AAAANAAAADIAAAA2AAAANQAAADUAAAAxAAAAYQAAADcAAAA1AAAANwAAADkAAAAwAAAANgAAAGEA
          AABmAAAAYwAAADgAAAA2AAAAOQAAADQAAAAtAAAAYgAAAGMAAAA1AAAAOAAAAC0AAAA0AAAAZQAA
          AGUAAABmAAAALQAAAGIAAABhAAAAZAAAADYAAAAtAAAAZQAAADcAAAA0AAAAYQAAADQAAAAxAAAA
          NwAAADAAAABjAAAAMgAAADcAAAA0AAAANgAAAGQAAAA1AAAAOQAAADIAAAA5AAAANgAAADYAAAAt
          AAAAMgAAAGEAAAAyAAAAZgAAAC0AAAA0AAAANQAAADYAAABjAAAALQAAAGIAAABkAAAAMAAAAGEA
          AAAtAAAAZgAAAGMAAAAwAAAAZAAAAGQAAAAyAAAAZQAAADAAAABkAAAANgAAADEAAAA5AAAANgAA
          AGUAAABhAAAANgAAADUAAAAxAAAAMQAAADcAAAAtAAAANAAAAGYAAABhAAAAOAAAAC0AAAA0AAAA
          MAAAADkAAAA5AAAALQAAAGEAAABlAAAANgAAADEAAAAtAAAANAAAADYAAAAxAAAAOQAAAGUAAABj
          AAAAOQAAADgAAAAwAAAAYQAAAGEAAABlAAAANwAAADEAAAAwAAAAYgAAADAAAAA2AAAAMQAAAGUA
          AAAtAAAAMwAAADUAAAA1AAAANwAAAC0AAAA0AAAAZgAAADAAAAA0AAAALQAAAGIAAAA0AAAAYQAA
          ADYAAAAtAAAAOAAAAGMAAABkAAAAMgAAAGMAAAAyAAAAZQAAAGUAAABhAAAANQAAADUAAAA1AAAA
          NwAAADEAAAAzAAAAMgAAADUAAAA4AAAANAAAADUAAAAtAAAAMAAAADcAAAA4AAAAYgAAAC0AAAA0
          AAAAMwAAADkAAABhAAAALQAAAGEAAAAyAAAANwAAAGMAAAAtAAAAZAAAAGYAAAA0AAAAOQAAAGEA
          AAA1AAAAOAAAADMAAAA2AAAANQAAADMAAABlAAAANwAAADIAAAAxAAAANAAAADEAAAAwAAAAOQAA
          AGUAAAAtAAAAMwAAADEAAAA1AAAAMwAAAC0AAAA0AAAANgAAADYAAABiAAAALQAAADkAAABhAAAA
          NAAAADQAAAAtAAAAOQAAADcAAAA4AAAAZQAAAGUAAABlAAAAOAAAADcAAAA1AAAANgAAADUAAABi
          AAAANwAAADMAAAA2AAAAMgAAADUAAAA4AAAAOQAAADEAAAAtAAAAMAAAADYAAABjAAAAMQAAAC0A
          AAA0AAAAOQAAADUAAAA0AAAALQAAAGEAAAAwAAAAYQAAADQAAAAtAAAAOAAAAGYAAAAxAAAAMAAA
          ADMAAABhAAAANAAAADkAAABmAAAAZAAAAGYAAABiAAAANwAAADMAAABhAAAANAAAADIAAAA3AAAA
          ZgAAAGUAAAAtAAAAZQAAAGQAAAA2AAAAMAAAAC0AAAA0AAAAZAAAADgAAAAwAAAALQAAADkAAAAz
          AAAAYgAAAGMAAAAtAAAANAAAADIAAAA3AAAAMAAAADMAAAAxAAAAYwAAAGIAAAA0AAAANgAAADUA
          AABhAAAANwAAADQAAAA1AAAAMgAAAGIAAAAwAAAAYwAAAGYAAAAtAAAANgAAADcAAABjAAAAOAAA
          AC0AAAA0AAAAZAAAADcAAAA1AAAALQAAADgAAABlAAAAOAAAADMAAAAtAAAANAAAADAAAABhAAAA
          NwAAAGUAAAAzAAAAYwAAADcAAABiAAAAOAAAADkAAAA2AAAANwAAADYAAABlAAAAOAAAAGIAAAA3
          AAAAYgAAADgAAAAtAAAANgAAADQAAAA4AAAAMwAAAC0AAAA0AAAAOAAAADQAAAAzAAAALQAAAGIA
          AABiAAAANwAAADIAAAAtAAAAMQAAAGQAAAAyAAAAMwAAADUAAABjAAAAYwAAADgAAAA4AAAAOAAA
          AGEAAABiAAAANwAAAGEAAAA3AAAAZgAAAGUAAAA0AAAAMgAAADMAAAAtAAAAZQAAADEAAABmAAAA
          ZgAAAC0AAAA0AAAAZgAAAGYAAABmAAAALQAAADkAAAA5AAAAYwAAADUAAAAtAAAANwAAAGUAAAA1
          AAAAMQAAADQAAAA5AAAAMQAAADMAAABjAAAAZAAAAGQAAABjAAAAOAAAADMAAABjAAAAYgAAADMA
          AAA1AAAAMgAAADQAAAAtAAAAOQAAAGYAAAA1AAAAYQAAAC0AAAA0AAAAZgAAAGUAAAAxAAAALQAA
          ADkAAABlAAAAMwAAAGUAAAAtAAAAYQAAAGIAAABjAAAANAAAADYAAAA1AAAAMwAAADgAAAAxAAAA
          ZAAAAGEAAAAxAAAAOAAAAGIAAABmAAAAZQAAADYAAAAyAAAAZQAAAGYAAAAtAAAANQAAAGMAAABk
          AAAAMgAAAC0AAAA0AAAANQAAAGEAAAA4AAAALQAAAGEAAABhAAAAMgAAADEAAAAtAAAAZQAAADMA
          AAA2AAAANQAAADMAAABiAAAANQAAADcAAABjAAAAYgAAADMAAABkAAAAOQAAADEAAAA2AAAANAAA
          AGYAAABlAAAAMgAAADIAAAAtAAAANQAAADYAAABhAAAAMgAAAC0AAAA0AAAAZgAAADgAAABkAAAA
          LQAAADkAAAA0AAAAMwAAAGUAAAAtAAAANQAAADkAAAAwAAAANAAAADMAAAA4AAAAMQAAAGMAAABl
          AAAAMQAAAGUAAAA2AAAAOQAAADIAAAA3AAAAYQAAADMAAABiAAAAYwAAAGEAAAAtAAAAYwAAAGQA
          AABkAAAANwAAAC0AAAA0AAAAZAAAAGMAAAA2AAAALQAAADkAAAAzAAAAYQAAADcAAAAtAAAAMgAA
          ADIAAAAxAAAANQAAADkAAAA1AAAAYgAAAGEAAABkAAAAOAAAADEAAABmAAAAOQAAADcAAAA1AAAA
          YgAAADEAAAA5AAAAMgAAAGIAAAAtAAAANAAAAGYAAAA4AAAAMwAAAC0AAAA0AAAAOAAAADMAAABk
          AAAALQAAADgAAABhAAAAOQAAADYAAAAtAAAANgAAAGQAAAA0AAAAYwAAAGUAAAA0AAAANQAAADEA
          AABkAAAAZgAAAGYAAABkAAAAOQAAADcAAAA2AAAAYgAAAGIAAABiAAAAMQAAADQAAAAtAAAAYgAA
          AGYAAABjAAAAYQAAAC0AAAA0AAAANQAAADgAAABmAAAALQAAADkAAAAwAAAANQAAADEAAAAtAAAA
          MgAAADkAAAA5AAAAOQAAADQAAAA4AAAANAAAAGEAAAAzAAAANAAAADUAAAAwAAAAOQAAAGEAAABl
          AAAAZQAAADYAAAA1AAAAZQAAAGIAAAAtAAAAYgAAADgAAABhAAAAMgAAAC0AAAA0AAAAMQAAAGEA
          AAAwAAAALQAAAGIAAAAwAAAAYgAAAGYAAAAtAAAANQAAADkAAAA5AAAAYQAAADcAAABiAAAANQAA
          AGIAAAA0AAAAZQAAAGMAAABhAAAAOQAAAGIAAAAwAAAAMQAAADkAAAA2AAAANgAAADIAAAAtAAAA
          OQAAADkAAAA3AAAAMwAAAC0AAAA0AAAAZQAAAGEAAAA4AAAALQAAADkAAAA4AAAAOAAAADIAAAAt
          AAAAOAAAADQAAAA2AAAAMgAAAGIAAAA2AAAAZgAAAGUAAAA0AAAAZQAAAGQAAABhAAAAOQAAAGMA
          AABjAAAAZgAAAGIAAAA3AAAAOQAAAGEAAAAtAAAAOAAAAGEAAAA2AAAANwAAAC0AAAA0AAAAMwAA
          ADgAAAA1AAAALQAAADgAAABmAAAAYgAAADEAAAAtAAAAOQAAADUAAABhAAAAMgAAAGIAAABmAAAA
          YQAAADIAAABhAAAANgAAADQAAAA0AAAAOQAAAGYAAABjAAAAMAAAADcAAAA3AAAAZgAAAGEAAAAt
          AAAANQAAAGQAAAA1AAAANQAAAC0AAAA0AAAAZQAAADUAAABjAAAALQAAADgAAABjAAAANgAAADYA
          AAAtAAAAYwAAADgAAAAwAAAAMAAAADMAAAA1AAAANAAAADUAAAA0AAAAMQAAAGIAAABkAAAAYQAA
          ADAAAAA3AAAAZQAAADkAAABhAAAAYQAAADEAAAAtAAAAMAAAAGEAAAAxAAAAZAAAAC0AAAA0AAAA
          YgAAADgAAAAyAAAALQAAADkAAAAyAAAANgAAAGIAAAAtAAAAYQAAAGMAAABhAAAAYgAAADUAAABl
          AAAAYgAAADUAAABkAAAAZgAAADcAAABmAAAAYQAAADIAAABlAAAAMgAAAGIAAAAwAAAAOAAAADQA
          AAAtAAAAOAAAADgAAABkAAAAYgAAAC0AAAA0AAAAYwAAADQAAAA3AAAALQAAAGEAAABhAAAAYwAA
          ADMAAAAtAAAANgAAADQAAAAxAAAAOAAAADgAAAA2AAAAYQAAAGYAAABjAAAAMgAAADkAAAA2AAAA
          YQAAAGIAAAA0AAAAMQAAAGEAAAA1AAAAMQAAADAAAAAtAAAAZgAAADAAAAAxAAAANwAAAC0AAAA0
          AAAAZQAAADkAAABiAAAALQAAADkAAAAzAAAANwAAAGEAAAAtAAAANAAAAGUAAAA2AAAANQAAADYA
          AAA5AAAAYgAAADcAAAA1AAAANgAAADAAAAA5AAAAYQAAAGIAAABkAAAANwAAAGIAAAAwAAAAOAAA
          AGEAAAAtAAAAMgAAAGYAAAAxAAAAYQAAAC0AAAA0AAAAMwAAADUAAABlAAAALQAAADkAAAA4AAAA
          ZQAAADAAAAAtAAAANQAAAGIAAABkAAAAMgAAAGIAAABiAAAAMwAAADEAAABmAAAAZQAAADEAAAA1
          AAAAYQAAAGQAAAA3AAAANQAAADkAAABkAAAAMwAAADQAAAAtAAAANQAAAGUAAAA1AAAAOAAAAC0A
          AAA0AAAAZgAAADYAAABlAAAALQAAAGIAAAAwAAAANAAAAGUAAAAtAAAAYQAAADMAAAAyAAAAYgAA
          AGIAAAAwAAAAOQAAADQAAABjAAAAYQAAADIAAAAzAAAAYgAAADEAAAAyAAAAOAAAAGEAAABmAAAA
          MAAAADIAAAAtAAAANQAAAGUAAAA0AAAAZAAAAC0AAAA0AAAANgAAADQAAAAzAAAALQAAAGIAAAAx
          AAAAZQAAADQAAAAtAAAAMwAAADIAAAA5AAAANQAAADkAAABjAAAAYgAAADQAAAA5AAAANAAAADcA
          AABiAAAAYgAAADEAAAA0AAAAOAAAADIAAAAxAAAAZQAAADQAAAAtAAAAMQAAADMAAAA5AAAAYwAA
          AC0AAAA0AAAAOAAAAGYAAAAxAAAALQAAADgAAAA5AAAANAAAADQAAAAtAAAAMAAAADYAAABhAAAA
          MgAAADAAAAA3AAAAMwAAAGYAAAA1AAAAMwAAADAAAAAxAAAAYgAAADIAAABhAAAAMgAAAGQAAAA1
          AAAANAAAADYAAAAtAAAAMQAAADQAAAAzAAAANgAAAC0AAAA0AAAAOAAAAGMAAAAzAAAALQAAAGEA
          AAAxAAAAZQAAADAAAAAtAAAANQAAADgAAAAxAAAAMQAAAGUAAABhAAAAMwAAADAAAAAzAAAAMwAA
          ADIAAAA4AAAAYgAAADQAAAA2AAAANwAAADgAAAA3AAAAMQAAAGUAAAAtAAAAMQAAAGUAAABhAAAA
          YgAAAC0AAAA0AAAAMAAAADAAAAAxAAAALQAAAGIAAABmAAAAZAAAAGIAAAAtAAAAMQAAAGYAAABm
          AAAAOAAAADEAAABjAAAAZQAAADgAAABiAAAAMAAAADEAAAA2AAAAYgAAADcAAAAyAAAANQAAADgA
          AAA3AAAAOAAAADMAAAAtAAAAYgAAADkAAAA3AAAANwAAAC0AAAA0AAAANgAAADEAAAAxAAAALQAA
          ADgAAABiAAAAZAAAADMAAAAtAAAAYwAAAGEAAAAwAAAANgAAAGEAAABkAAAANgAAADgAAABmAAAA
          NgAAADcAAABjAAAAYgAAADcAAAA1AAAAMgAAADUAAAAzAAAAZQAAAGEAAAAtAAAANwAAAGIAAABk
          AAAAMwAAAC0AAAA0AAAAMgAAAGQAAAA3AAAALQAAADkAAAA3AAAAMwAAADQAAAAtAAAAYgAAADMA
          AABjAAAAOQAAAGIAAAA2AAAANgAAADEAAABhAAAAOQAAAGIAAAA2AAAAYgAAADkAAAA0AAAAYgAA
          ADIAAAA0AAAANwAAADYAAAAtAAAAZAAAAGUAAAA0AAAAZgAAAC0AAAA0AAAAMAAAAGEAAAA1AAAA
          LQAAAGIAAAA2AAAAZgAAADQAAAAtAAAAOQAAAGIAAABjAAAAOQAAADMAAAAzAAAAMgAAADIAAAA2
          AAAAMgAAADAAAABmAAAAYgAAAGEAAAAwAAAAZAAAAGYAAABiAAAAZAAAAGUAAAAtAAAAOAAAAGMA
          AAA0AAAAYQAAAC0AAAA0AAAAMwAAADEAAABmAAAALQAAAGEAAAA2AAAANwAAAGUAAAAtAAAAZQAA
          ADcAAABkAAAAMwAAADUAAABhAAAANwAAAGEAAAAyAAAAMwAAADEAAABlAAAAYgAAAGQAAAAzAAAA
          ZgAAAGIAAABmAAAAZgAAAGUAAAAtAAAAMQAAAGEAAAA3AAAANQAAAC0AAAA0AAAAZgAAADQAAAAy
          AAAALQAAADkAAAA3AAAAYgAAADcAAAAtAAAANAAAADIAAAA1AAAAZQAAADYAAABjAAAAZQAAADYA
          AABmAAAAYwAAADkAAAAyAAAAYwAAADAAAABiAAAAMQAAAGMAAAA3AAAAYgAAAGUAAAAtAAAAMQAA
          AGYAAAA1AAAAOAAAAC0AAAA0AAAAMgAAAGEAAABlAAAALQAAADgAAABiAAAAYQAAADAAAAAtAAAA
          MQAAADgAAAA2AAAAZAAAADYAAABhAAAANQAAADcAAAAzAAAAMQAAAGQAAAA1AAAAYwAAADEAAABj
          AAAAZQAAADUAAABhAAAAMAAAAGIAAAAtAAAAZQAAADIAAAA4AAAAYQAAAC0AAAA0AAAAZQAAAGEA
          AAA2AAAALQAAADkAAAA1AAAANAAAADcAAAAtAAAAMgAAAGYAAAAxAAAAZAAAAGMAAAA2AAAANQAA
          AGUAAAA4AAAAYQAAADUAAABkAAAAYwAAADQAAAAwAAAAYQAAAGYAAABhAAAANQAAAGQAAAAtAAAA
          ZAAAAGQAAABmAAAAYgAAAC0AAAA0AAAAYgAAAGUAAAAzAAAALQAAAGEAAABjAAAAMAAAADEAAAAt
          AAAAOAAAADgAAAA4AAAANAAAAGQAAABiAAAANAAAAGUAAABlAAAANwAAAGIAAAA4AAAAYwAAADUA
          AABkAAAAOQAAADcAAAAwAAAAMwAAADEAAAAtAAAANAAAAGUAAAAzAAAANAAAAC0AAAA0AAAAMAAA
          ADUAAAA4AAAALQAAADgAAABmAAAAMgAAADEAAAAtAAAANwAAADUAAAA4AAAANQAAADQAAAAyAAAA
          ZAAAADEAAAA0AAAAZAAAAGUAAABiAAAAYwAAADcAAABlAAAAYQAAAGIAAAA2AAAAMQAAADgAAAAt
          AAAAYQAAAGUAAABlAAAAMQAAAC0AAAA0AAAAZQAAADgAAABmAAAALQAAAGIAAAAzAAAAYQAAADkA
          AAAtAAAAOAAAAGMAAABmAAAANgAAADIAAAA5AAAAZAAAAGQAAABjAAAAZQAAADEAAAA5AAAAYwAA
          AGIAAABjAAAANgAAAGYAAABkAAAAOAAAAGQAAAAtAAAAOAAAADIAAABhAAAAMwAAAC0AAAA0AAAA
          MAAAAGQAAAA1AAAALQAAADgAAAA4AAAAYwAAAGYAAAAtAAAAZQAAADEAAAAyAAAAYgAAAGUAAAA3
          AAAANgAAADcAAABjAAAANwAAADMAAAA5AAAAYwAAAGQAAAAwAAAAYgAAADQAAAA3AAAANwAAADMA
          AAAtAAAANAAAAGYAAABhAAAAOAAAAC0AAAA0AAAANQAAADEAAABhAAAALQAAAGIAAAAxAAAAOQAA
          ADIAAAAtAAAANAAAADkAAAA5AAAAMgAAAGUAAAA3AAAAOQAAADQAAAAxAAAAOAAAADgAAABmAAAA
          YwAAAGUAAAA5AAAAOQAAAGMAAABiAAAAMwAAAGEAAAAtAAAAOQAAAGMAAABjAAAAZQAAAC0AAAA0
          AAAAZAAAADEAAAAxAAAALQAAAGEAAABkAAAAMAAAADgAAAAtAAAAMgAAAGQAAAA4AAAAYwAAAGMA
          AAA1AAAAZQAAADEAAAA3AAAANwAAAGMAAABiAAAAYwAAAGUAAABlAAAANQAAAGEAAAA5AAAAMQAA
          AGQAAAAtAAAAYgAAADcAAABhAAAAYgAAAC0AAAA0AAAAOAAAAGIAAAAxAAAALQAAADgAAAA0AAAA
          NAAAADMAAAAtAAAANwAAADcAAAA2AAAAMwAAAGQAAAAyAAAAOAAAADQAAAA2AAAANwAAADUAAAA5
          AAAAYwAAAGYAAABiAAAANAAAAGIAAABhAAAAMgAAAGYAAAAtAAAANgAAAGUAAAA0AAAANgAAAC0A
          AAA0AAAAMwAAADQAAABmAAAALQAAADkAAAA5AAAAZQAAAGIAAAAtAAAAYgAAAGEAAAA5AAAAZAAA
          ADUAAAA5AAAAMAAAADAAAAAwAAAAZgAAAGYAAABlAAAAYwAAAGYAAABlAAAAZAAAADgAAAAyAAAA
          MQAAAGMAAAAtAAAAMAAAADUAAAAzAAAAYQAAAC0AAAA0AAAAZgAAAGEAAAA2AAAALQAAAGEAAAA3
          AAAANwAAAGUAAAAtAAAAMwAAADYAAAAxAAAAMAAAADAAAABlAAAAMQAAADYAAAAzAAAAOAAAADEA
          AAA0AAAAZAAAADAAAABhAAAANAAAADMAAABhAAAAMgAAADgAAAAtAAAAMgAAADAAAABmAAAAYQAA
          AC0AAAA0AAAAZAAAAGQAAABhAAAALQAAAGEAAAA4AAAAOQAAADcAAAAtAAAAZAAAADYAAAA1AAAA
          ZgAAADAAAAA4AAAAMAAAAGYAAAA3AAAAZQAAADMAAAA5AAAAZAAAADQAAABkAAAANAAAADEAAAAx
          AAAAYgAAAGQAAAAtAAAAMQAAAGYAAABlAAAAYwAAAC0AAAA0AAAAYgAAADUAAAA1AAAALQAAADkA
          AABmAAAAYQAAADIAAAAtAAAAMwAAADAAAAA3AAAAYgAAADQAAABiAAAAMQAAADgAAABlAAAAMgAA
          AGYAAAA2AAAAZAAAAGEAAAAzAAAANwAAADUAAABjAAAANwAAADUAAAAtAAAAMQAAADkAAABlAAAA
          ZAAAAC0AAAA0AAAAMQAAADMAAAA4AAAALQAAAGIAAAA3AAAAMwAAADYAAAAtAAAAYQAAADQAAAA3
          AAAAOAAAADQAAABlAAAANAAAADkAAABhAAAAOQAAAGIAAAA4AAAAZAAAAGIAAABhAAAAMAAAAGQA
          AAA1AAAAMwAAADcAAAAtAAAAMwAAADQAAABmAAAAOAAAAC0AAAA0AAAAMgAAADcAAAA0AAAALQAA
          ADkAAABhAAAAZgAAADQAAAAtAAAAYgAAAGQAAAA5AAAANAAAAGEAAABiAAAANAAAAGEAAABmAAAA
          MAAAADMAAABlAAAAZAAAAGMAAAA4AAAANgAAADEAAAA3AAAAMwAAADkAAAAtAAAAYwAAAGUAAAA5
          AAAAZQAAAC0AAAA0AAAAMAAAAGUAAAA2AAAALQAAADkAAAAyAAAAZQAAAGUAAAAtAAAAMQAAAGIA
          AAA0AAAAMQAAAGYAAABhAAAAMAAAADYAAAA3AAAAMAAAADUAAABjAAAAZAAAAGMAAABlAAAANgAA
          ADUAAABkAAAAMQAAADkAAAAtAAAAOQAAAGIAAABiAAAAZQAAAC0AAAA0AAAAMwAAADgAAAAwAAAA
          LQAAAGIAAABmAAAAOQAAADgAAAAtAAAAOAAAAGYAAAAyAAAAMAAAAGIAAAAxAAAAZQAAADkAAABi
          AAAAZAAAAGMAAABlAAAAZAAAAGQAAAA5AAAANQAAADEAAAA2AAAAYgAAADAAAAAtAAAANAAAAGUA
          AAA5AAAAMgAAAC0AAAA0AAAAYgAAAGQAAAA2AAAALQAAAGIAAAAyAAAAMgAAAGMAAAAtAAAANwAA
          ADgAAAA5AAAANAAAADIAAAA1AAAAYwAAADMAAABhAAAAYgAAADUAAAAxAAAAZQAAADYAAAA2AAAA
          YwAAADQAAAAxAAAANgAAADAAAAAtAAAAZQAAAGEAAABhAAAAMgAAAC0AAAA0AAAAOAAAADEAAAA5
          AAAALQAAADgAAAAyAAAAYgAAAGMAAAAtAAAANQAAAGUAAAAzAAAAMQAAAGQAAABlAAAANwAAADQA
          AAA2AAAAZQAAADIAAAA1AAAAZQAAADYAAABhAAAAOQAAADEAAAA5AAAAMAAAADkAAAAtAAAAOAAA
          ADAAAABhAAAAMwAAAC0AAAA0AAAAYQAAAGEAAABlAAAALQAAADgAAABjAAAANwAAAGYAAAAtAAAA
          YQAAADkAAABjAAAANQAAAGUAAAAwAAAAZAAAADQAAAA3AAAAYgAAADAAAAA5AAAAZQAAADkAAAAx
          AAAAMgAAADUAAABmAAAANwAAADgAAAAtAAAAOAAAAGEAAABkAAAAMAAAAC0AAAA0AAAAMAAAAGEA
          AABlAAAALQAAADgAAAAyAAAAOAAAADkAAAAtAAAANgAAAGUAAAA3AAAAOAAAAGIAAAA3AAAAMwAA
          AGYAAAAwAAAAZQAAADkAAABlAAAAZQAAAGMAAAAyAAAAMQAAADIAAAA3AAAAOQAAADIAAAAtAAAA
          YwAAAGUAAAA1AAAAMgAAAC0AAAA0AAAAZQAAADcAAABhAAAALQAAADkAAAAzAAAAYQAAADcAAAAt
          AAAANQAAAGYAAAA2AAAAMwAAADAAAABiAAAAMwAAADIAAABjAAAAMgAAAGYAAAA3AAAAZgAAADYA
          AABmAAAANQAAADkAAAA5AAAANAAAAGMAAAAtAAAAYwAAAGMAAAA3AAAAZAAAAC0AAAA0AAAAYQAA
          ADYAAAAxAAAALQAAADkAAABlAAAANAAAAGYAAAAtAAAANwAAADEAAAA2AAAAYQAAADUAAAA3AAAA
          MQAAADQAAABjAAAANQAAADgAAABjAAAAZgAAADcAAAA3AAAANAAAAGIAAAAyAAAAYgAAADQAAAAt
          AAAAZAAAAGQAAAA1AAAAMAAAAC0AAAA0AAAAZAAAAGYAAABmAAAALQAAADkAAAA1AAAAYwAAADYA
          AAAtAAAAYQAAADUAAAAxAAAAZAAAADMAAAA4AAAAOQAAADcAAABjAAAAZAAAADQAAABjAAAAZgAA
          AGEAAAA0AAAAMAAAADEAAABlAAAANwAAADgAAAAtAAAAZQAAAGYAAAAzAAAAYQAAAC0AAAA0AAAA
          YwAAAGMAAAA5AAAALQAAAGIAAAAzAAAAOQAAADIAAAAtAAAAMQAAADAAAAAyAAAANAAAADYAAABl
          AAAAZQAAADMAAAAwAAAAZgAAAGUAAAA5AAAAZgAAAGMAAAAxAAAANwAAADQAAAA3AAAANQAAADEA
          AAAtAAAAMwAAAGUAAAA0AAAAYwAAAC0AAAA0AAAAMgAAADEAAAAzAAAALQAAAGIAAABjAAAAMwAA
          ADkAAAAtAAAAZQAAAGEAAABjAAAAYQAAAGEAAAA5AAAAMwAAAGQAAAA2AAAAYwAAADIAAAAyAAAA
          ZgAAAGQAAABmAAAANAAAADYAAAAzAAAAYQAAADEAAAAtAAAANQAAADUAAAA5AAAANgAAAC0AAAA0
          AAAAYwAAADUAAAAzAAAALQAAAGEAAAA4AAAAYwAAAGYAAAAtAAAAYwAAADAAAABmAAAAZgAAADEA
          AAA4AAAAZQAAADYAAABmAAAAMQAAADkAAAA5AAAA
      warn: true
    city: !!python/object:pytorch_forecasting.data.encoders.NaNLabelEncoder
      add_nan: false
      classes_: &id006
        Aachen: 0
        Aichach: 1
        Alteglofsheim: 2
        Altrip: 3
        Bad Ditzenbach: 4
        Bad Honnef: 5
        "Bad K\xF6nig": 6
        "Bad M\xFCnstereifel": 7
        Bad Schwartau: 8
        "Bad Sch\xF6nborn": 9
        Beckum: 10
        Bergisch Gladbach: 11
        Berlin: 12
        Biblis: 13
        Bochum: 14
        Brachttal: 15
        Bremen: 16
        Brilon: 17
        Bucha: 18
        Buchholz in der Nordheide: 19
        Burkardroth: 20
        Darmstadt: 21
        Denzlingen: 22
        Dortmund: 23
        Duisburg: 24
        "D\xFCsseldorf": 25
        Ebersburg: 26
        Erftstadt: 27
        Erfurt: 28
        Euskirchen: 29
        Fischbach bei Dahn: 30
        Freiburg im Breisgau: 31
        Gaiberg: 32
        Gelsenkirchen: 33
        Greifenstein: 34
        Gronau (Westfalen): 35
        "Gro\xDF-Zimmern": 36
        Haan: 37
        Hamburg Hamburg-Altstadt: 38
        Hattersheim: 39
        Heidelberg: 40
        Hemslingen: 41
        Henstedt-Ulzburg: 42
        Horgenzell: 43
        "H\xF6now": 44
        "H\xFCckelhoven": 45
        Ihlow Ochtelbur: 46
        "J\xFClich": 47
        Kaarst: 48
        Kamen: 49
        Karben: 50
        Karlsruhe: 51
        Konstanz: 52
        Korbach: 53
        Kulmbach: 54
        "K\xF6dnitz": 55
        "K\xF6ln": 56
        Lampertheim: 57
        Langerwehe: 58
        Lehrte: 59
        Lemwerder: 60
        Linkenheim-Hochstetten: 61
        Lohmar: 62
        Mainz: 63
        Mannheim: 64
        Meerbusch: 65
        Michelstadt: 66
        Moosburg: 67
        "M\xF6rlenbach": 68
        "M\xFCnchen": 69
        Neubeuern: 70
        Neutraubling: 71
        Nordhorn: 72
        "N\xFCrnberg": 73
        Offenbach: 74
        Oldenburg (Oldenburg): 75
        Osterrade: 76
        Otzberg: 77
        Pegnitz: 78
        Peine: 79
        Plankenfels: 80
        Plochingen: 81
        Rangsdorf: 82
        Rudersberg: 83
        "R\xF6dermark": 84
        Schernfeld: 85
        Schiffdorf: 86
        Schmachtenhagen: 87
        Schwalmstadt: 88
        Seelze: 89
        Siegen: 90
        Stuhr: 91
        Stuttgart Stuttgart-West: 92
        "St\xE4below": 93
        Tangstedt: 94
        Trier: 95
        Venningen: 96
        "Weil im Sch\xF6nbuch": 97
        "Wei\xDFenfels, OT Leissling": 98
        "Wei\xDFensee": 99
        Wilhelmshaven: 100
        Windischleuba: 101
        "Winh\xF6ring": 102
        Wuppertal: 103
      classes_vector_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 104
        - !!python/object/apply:numpy.dtype
          args:
          - U25
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - 100
          - 4
          - 8
        - false
        - !!binary |
          QQAAAGEAAABjAAAAaAAAAGUAAABuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEEAAABpAAAAYwAAAGgA
          AABhAAAAYwAAAGgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBAAAAbAAAAHQAAABlAAAAZwAAAGwAAABvAAAA
          ZgAAAHMAAABoAAAAZQAAAGkAAABtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAQQAAAGwAAAB0AAAAcgAAAGkAAABwAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AEIAAABhAAAAZAAAACAAAABEAAAAaQAAAHQAAAB6AAAAZQAAAG4AAABiAAAAYQAAAGMAAABoAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCAAAAYQAAAGQAAAAg
          AAAASAAAAG8AAABuAAAAbgAAAGUAAABmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQgAAAGEAAABkAAAAIAAAAEsAAAD2AAAAbgAA
          AGkAAABnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAEIAAABhAAAAZAAAACAAAABNAAAA/AAAAG4AAABzAAAAdAAAAGUAAABy
          AAAAZQAAAGkAAABmAAAAZQAAAGwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AABCAAAAYQAAAGQAAAAgAAAAUwAAAGMAAABoAAAAdwAAAGEAAAByAAAAdAAAAGEAAAB1AAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQgAAAGEAAABkAAAA
          IAAAAFMAAABjAAAAaAAAAPYAAABuAAAAYgAAAG8AAAByAAAAbgAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEIAAABlAAAAYwAAAGsAAAB1AAAAbQAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAABCAAAAZQAAAHIAAABnAAAAaQAAAHMAAABjAAAAaAAAACAAAABHAAAA
          bAAAAGEAAABkAAAAYgAAAGEAAABjAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAQgAAAGUAAAByAAAAbAAAAGkAAABuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEIAAABpAAAAYgAA
          AGwAAABpAAAAcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCAAAAbwAAAGMAAABoAAAAdQAAAG0AAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAQgAAAHIAAABhAAAAYwAAAGgAAAB0AAAAdAAAAGEAAABsAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAEIAAAByAAAAZQAAAG0AAABlAAAAbgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCAAAAcgAAAGkA
          AABsAAAAbwAAAG4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQgAAAHUAAABjAAAAaAAAAGEAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAEIAAAB1AAAAYwAAAGgAAABoAAAAbwAAAGwAAAB6AAAAIAAAAGkA
          AABuAAAAIAAAAGQAAABlAAAAcgAAACAAAABOAAAAbwAAAHIAAABkAAAAaAAAAGUAAABpAAAAZAAA
          AGUAAABCAAAAdQAAAHIAAABrAAAAYQAAAHIAAABkAAAAcgAAAG8AAAB0AAAAaAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARAAAAGEAAABy
          AAAAbQAAAHMAAAB0AAAAYQAAAGQAAAB0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEQAAABlAAAAbgAAAHoAAABsAAAAaQAA
          AG4AAABnAAAAZQAAAG4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAABEAAAAbwAAAHIAAAB0AAAAbQAAAHUAAABuAAAAZAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAARAAAAHUAAABpAAAAcwAAAGIAAAB1AAAAcgAAAGcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEQAAAD8AAAA
          cwAAAHMAAABlAAAAbAAAAGQAAABvAAAAcgAAAGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFAAAAYgAAAGUAAAByAAAAcwAAAGIA
          AAB1AAAAcgAAAGcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAARQAAAHIAAABmAAAAdAAAAHMAAAB0AAAAYQAAAGQAAAB0AAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAEUAAAByAAAAZgAAAHUAAAByAAAAdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFAAAAdQAA
          AHMAAABrAAAAaQAAAHIAAABjAAAAaAAAAGUAAABuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARgAAAGkAAABzAAAAYwAAAGgAAABi
          AAAAYQAAAGMAAABoAAAAIAAAAGIAAABlAAAAaQAAACAAAABEAAAAYQAAAGgAAABuAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEYAAAByAAAAZQAAAGkAAABiAAAAdQAAAHIAAABnAAAAIAAA
          AGkAAABtAAAAIAAAAEIAAAByAAAAZQAAAGkAAABzAAAAZwAAAGEAAAB1AAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAABHAAAAYQAAAGkAAABiAAAAZQAAAHIAAABnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARwAAAGUA
          AABsAAAAcwAAAGUAAABuAAAAawAAAGkAAAByAAAAYwAAAGgAAABlAAAAbgAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEcAAAByAAAAZQAAAGkAAABmAAAA
          ZQAAAG4AAABzAAAAdAAAAGUAAABpAAAAbgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABHAAAAcgAAAG8AAABuAAAAYQAAAHUAAAAgAAAAKAAAAFcA
          AABlAAAAcwAAAHQAAABmAAAAYQAAAGwAAABlAAAAbgAAACkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAARwAAAHIAAABvAAAA3wAAAC0AAABaAAAAaQAAAG0AAABtAAAAZQAAAHIAAABuAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAABh
          AAAAYQAAAG4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIAAAAYQAAAG0AAABiAAAAdQAA
          AHIAAABnAAAAIAAAAEgAAABhAAAAbQAAAGIAAAB1AAAAcgAAAGcAAAAtAAAAQQAAAGwAAAB0AAAA
          cwAAAHQAAABhAAAAZAAAAHQAAAAAAAAASAAAAGEAAAB0AAAAdAAAAGUAAAByAAAAcwAAAGgAAABl
          AAAAaQAAAG0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAEgAAABlAAAAaQAAAGQAAABlAAAAbAAAAGIAAABlAAAAcgAAAGcAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIAAAA
          ZQAAAG0AAABzAAAAbAAAAGkAAABuAAAAZwAAAGUAAABuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASAAAAGUAAABuAAAAcwAAAHQA
          AABlAAAAZAAAAHQAAAAtAAAAVQAAAGwAAAB6AAAAYgAAAHUAAAByAAAAZwAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAABvAAAAcgAAAGcAAABlAAAAbgAAAHoAAABlAAAA
          bAAAAGwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAABIAAAA9gAAAG4AAABvAAAAdwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASAAA
          APwAAABjAAAAawAAAGUAAABsAAAAaAAAAG8AAAB2AAAAZQAAAG4AAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEkAAABoAAAAbAAAAG8AAAB3
          AAAAIAAAAE8AAABjAAAAaAAAAHQAAABlAAAAbAAAAGIAAAB1AAAAcgAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABKAAAA/AAAAGwAAABpAAAAYwAAAGgAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAASwAAAGEAAABhAAAAcgAAAHMAAAB0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEsA
          AABhAAAAbQAAAGUAAABuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABLAAAAYQAAAHIAAABiAAAA
          ZQAAAG4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASwAAAGEAAAByAAAAbAAAAHMAAAByAAAAdQAAAGgA
          AABlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAEsAAABvAAAAbgAAAHMAAAB0AAAAYQAAAG4AAAB6AAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABL
          AAAAbwAAAHIAAABiAAAAYQAAAGMAAABoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASwAAAHUAAABsAAAAbQAA
          AGIAAABhAAAAYwAAAGgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEsAAAD2AAAAZAAAAG4AAABpAAAAdAAAAHoAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAABLAAAA9gAAAGwAAABuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          TAAAAGEAAABtAAAAcAAAAGUAAAByAAAAdAAAAGgAAABlAAAAaQAAAG0AAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEwAAABhAAAAbgAAAGcA
          AABlAAAAcgAAAHcAAABlAAAAaAAAAGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMAAAAZQAAAGgAAAByAAAAdAAAAGUAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAATAAAAGUAAABtAAAAdwAAAGUAAAByAAAAZAAAAGUAAAByAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AEwAAABpAAAAbgAAAGsAAABlAAAAbgAAAGgAAABlAAAAaQAAAG0AAAAtAAAASAAAAG8AAABjAAAA
          aAAAAHMAAAB0AAAAZQAAAHQAAAB0AAAAZQAAAG4AAAAAAAAAAAAAAAAAAABMAAAAbwAAAGgAAABt
          AAAAYQAAAHIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATQAAAGEAAABpAAAAbgAAAHoAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAE0AAABhAAAAbgAAAG4AAABoAAAAZQAAAGkAAABtAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AABNAAAAZQAAAGUAAAByAAAAYgAAAHUAAABzAAAAYwAAAGgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATQAAAGkAAABjAAAA
          aAAAAGUAAABsAAAAcwAAAHQAAABhAAAAZAAAAHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE0AAABvAAAAbwAAAHMAAABiAAAAdQAAAHIA
          AABnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAABNAAAA9gAAAHIAAABsAAAAZQAAAG4AAABiAAAAYQAAAGMAAABoAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAATQAAAPwAAABuAAAAYwAAAGgAAABlAAAAbgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE4AAABlAAAAdQAA
          AGIAAABlAAAAdQAAAGUAAAByAAAAbgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABOAAAAZQAAAHUAAAB0AAAAcgAAAGEAAAB1
          AAAAYgAAAGwAAABpAAAAbgAAAGcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAATgAAAG8AAAByAAAAZAAAAGgAAABvAAAAcgAAAG4AAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAE4AAAD8AAAAcgAAAG4AAABiAAAAZQAAAHIAAABnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPAAAAZgAAAGYA
          AABlAAAAbgAAAGIAAABhAAAAYwAAAGgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATwAAAGwAAABkAAAAZQAAAG4AAABiAAAA
          dQAAAHIAAABnAAAAIAAAACgAAABPAAAAbAAAAGQAAABlAAAAbgAAAGIAAAB1AAAAcgAAAGcAAAAp
          AAAAAAAAAAAAAAAAAAAAAAAAAE8AAABzAAAAdAAAAGUAAAByAAAAcgAAAGEAAABkAAAAZQAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAABPAAAAdAAAAHoAAABiAAAAZQAAAHIAAABnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAGUAAABn
          AAAAbgAAAGkAAAB0AAAAegAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAABlAAAAaQAAAG4AAABlAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAbAAAAGEAAABuAAAAawAAAGUAAABuAAAAZgAAAGUAAABs
          AAAAcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAUAAAAGwAAABvAAAAYwAAAGgAAABpAAAAbgAAAGcAAABlAAAAbgAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFIAAABhAAAA
          bgAAAGcAAABzAAAAZAAAAG8AAAByAAAAZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABSAAAAdQAAAGQAAABlAAAAcgAAAHMA
          AABiAAAAZQAAAHIAAABnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAUgAAAPYAAABkAAAAZQAAAHIAAABtAAAAYQAAAHIAAABrAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAFMAAABjAAAAaAAAAGUAAAByAAAAbgAAAGYAAABlAAAAbAAAAGQAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABTAAAAYwAA
          AGgAAABpAAAAZgAAAGYAAABkAAAAbwAAAHIAAABmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUwAAAGMAAABoAAAAbQAAAGEAAABj
          AAAAaAAAAHQAAABlAAAAbgAAAGgAAABhAAAAZwAAAGUAAABuAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFMAAABjAAAAaAAAAHcAAABhAAAAbAAAAG0AAABzAAAAdAAA
          AGEAAABkAAAAdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAABTAAAAZQAAAGUAAABsAAAAegAAAGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUwAAAGkA
          AABlAAAAZwAAAGUAAABuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFMAAAB0AAAAdQAAAGgAAAByAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABTAAAAdAAAAHUAAAB0AAAAdAAAAGcAAABhAAAAcgAAAHQA
          AAAgAAAAUwAAAHQAAAB1AAAAdAAAAHQAAABnAAAAYQAAAHIAAAB0AAAALQAAAFcAAABlAAAAcwAA
          AHQAAAAAAAAAUwAAAHQAAADkAAAAYgAAAGUAAABsAAAAbwAAAHcAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFQAAABh
          AAAAbgAAAGcAAABzAAAAdAAAAGUAAABkAAAAdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUAAAAcgAAAGkAAABlAAAAcgAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVgAAAGUAAABuAAAAbgAAAGkAAABuAAAAZwAAAGUAAABu
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAFcAAABlAAAAaQAAAGwAAAAgAAAAaQAAAG0AAAAgAAAAUwAAAGMAAABoAAAA9gAA
          AG4AAABiAAAAdQAAAGMAAABoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABXAAAA
          ZQAAAGkAAADfAAAAZQAAAG4AAABmAAAAZQAAAGwAAABzAAAALAAAACAAAABPAAAAVAAAACAAAABM
          AAAAZQAAAGkAAABzAAAAcwAAAGwAAABpAAAAbgAAAGcAAAAAAAAAVwAAAGUAAABpAAAA3wAAAGUA
          AABuAAAAcwAAAGUAAABlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFcAAABpAAAAbAAAAGgAAABlAAAAbAAAAG0AAABzAAAA
          aAAAAGEAAAB2AAAAZQAAAG4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAABXAAAAaQAAAG4AAABkAAAAaQAAAHMAAABjAAAAaAAAAGwAAABlAAAAdQAAAGIA
          AABhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVwAA
          AGkAAABuAAAAaAAAAPYAAAByAAAAaQAAAG4AAABnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFcAAAB1AAAAcAAAAHAAAABl
          AAAAcgAAAHQAAABhAAAAbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
      warn: true
    hour: !!python/object:pytorch_forecasting.data.encoders.NaNLabelEncoder
      add_nan: false
      classes_: &id007
        '0': 0
        '1': 1
        '10': 2
        '11': 3
        '12': 4
        '13': 5
        '14': 6
        '15': 7
        '16': 8
        '17': 9
        '18': 10
        '19': 11
        '2': 12
        '20': 13
        '21': 14
        '22': 15
        '23': 16
        '3': 17
        '4': 18
        '5': 19
        '6': 20
        '7': 21
        '8': 22
        '9': 23
      classes_vector_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 24
        - !!python/object/apply:numpy.dtype
          args:
          - U2
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - 8
          - 4
          - 8
        - false
        - !!binary |
          MAAAAAAAAAAxAAAAAAAAADEAAAAwAAAAMQAAADEAAAAxAAAAMgAAADEAAAAzAAAAMQAAADQAAAAx
          AAAANQAAADEAAAA2AAAAMQAAADcAAAAxAAAAOAAAADEAAAA5AAAAMgAAAAAAAAAyAAAAMAAAADIA
          AAAxAAAAMgAAADIAAAAyAAAAMwAAADMAAAAAAAAANAAAAAAAAAA1AAAAAAAAADYAAAAAAAAANwAA
          AAAAAAA4AAAAAAAAADkAAAAAAAAA
      warn: true
    is_holiday: !!python/object:pytorch_forecasting.data.encoders.NaNLabelEncoder
      add_nan: false
      classes_: &id008
        'False': 0
        'True': 1
      classes_vector_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 2
        - !!python/object/apply:numpy.dtype
          args:
          - U5
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - 20
          - 4
          - 8
        - false
        - !!binary |
          RgAAAGEAAABsAAAAcwAAAGUAAABUAAAAcgAAAHUAAABlAAAAAAAAAA==
      warn: true
    meter_id: !!python/object:pytorch_forecasting.data.encoders.NaNLabelEncoder
      add_nan: false
      classes_:
        0079edf0-c6be-4945-b1aa-f8f985952f68: 0
        0098a6f4-3239-44a5-9a3e-ce972346e682: 1
        048825bd-2b0e-4b3d-960d-f65a8c9b6ed8: 2
        05ef25da-1f2f-4789-bc9b-b472a49196c9: 3
        0f1cce70-4f32-4a50-9dc7-66c019c7cf3a: 4
        136c331c-db9a-4bf0-b7f5-69435cb81583: 5
        145822f3-be35-4d07-a119-d12b6c066ee9: 6
        1508cb1f-8333-461d-9298-97d1b23a4bfb: 7
        1696046d-41d4-41dd-bcef-d2f21a988b50: 8
        18d9d0fd-0c60-41ab-896f-2894c87e1239: 9
        193be419-76d3-418f-84de-c58dc73082c4: 10
        1946227b-c5ed-4d65-a5d0-70049473e919: 11
        1a06d387-3541-406a-9c84-e9956ea9cc94: 12
        1df2bb3b-058b-4121-8dbb-c2a6203aca3b: 13
        1fe34333-5155-4a46-b18d-298d92687316: 14
        20480ee8-ca99-44da-b0d0-6ce2d2e1fcb2: 15
        275b323d-53a9-4757-a473-2fa11dbe77fe: 16
        29ebf833-c223-48f6-b1e7-cbf0a4e6abf3: 17
        2c1089ac-e9c8-4dea-891f-43fb932aa6f9: 18
        2cd15571-1c9f-4764-a281-861f4ad8f5d3: 19
        2d6a9c76-9a54-417a-ba6e-f402938e2cb1: 20
        3010a87b-9a22-4187-bb7f-8925d086d0f2: 21
        30841558-04f2-44d3-9b82-19bab5fc68be: 22
        318f713a-ebe9-45e1-9f0c-101e4bb1bb0e: 23
        31b3c536-753d-4c59-8634-c6ef7eb1ead4: 24
        32d2625c-8080-4b81-a102-6fa9970d275a: 25
        332fd5b7-be77-4e39-ab4e-65fe177bdfcc: 26
        34f2f848-3dda-47db-87d2-065f751356ec: 27
        390e6930-ba01-4996-9617-cf29b0aaf8d4: 28
        3cda0a48-584f-4b39-9075-e75f3e46cbac: 29
        3d406a2c-bf53-45a8-b3bd-e5aff06e7b95: 30
        3df8ec3c-6b6c-4ab8-a932-cdbfd6991d90: 31
        3e7a2bd8-224d-4433-a59d-ba0c7810aca9: 32
        3f4fa33d-4bc8-4be5-aa42-8b568cfa80cb: 33
        425ab004-f7f1-460f-a1c7-160dc6283e8b: 34
        4b903746-4b3e-41e6-9003-ebe150ae2f61: 35
        4c64e482-8588-43bb-9ae8-c7262c137ffa: 36
        4e7e623a-bda5-49f7-a02c-df84c2f80f77: 37
        515378c1-5853-458a-af90-fafe7849bae1: 38
        5325cd3f-ac3a-44dc-bacf-fe523a6fc0ab: 39
        560c2db0-db56-4c76-a4dc-cf1fcb6fe70e: 40
        589c8600-bdad-4804-86e0-9f893fe1fa8a: 41
        5ab1cda5-5dbb-453c-8631-3442dfd90f6e: 42
        5b939e19-cebc-400a-b3e2-54ef0c1f4756: 43
        5d907e07-088c-445d-a837-936b0b249f5f: 44
        5ed7a38c-ef37-42fd-b9d1-ca7142faf563: 45
        604f8bb0-91c0-44e1-854b-b1588a9447b1: 46
        61a4030e-3018-4602-84f2-436cbd253bd4: 47
        63a06c39-7d7e-457c-b832-8dee5a267f42: 48
        665f242a-f283-4935-9a2a-bcdba0b0c0e6: 49
        6864baef-b07b-4421-b400-2092a977f8cc: 50
        692cfc09-2e09-473e-8008-7bd63c9305df: 51
        696db12a-d47f-44a2-941a-426551a75790: 52
        6afc8694-bc58-4eef-bad6-e74a4170c274: 53
        6d592966-2a2f-456c-bd0a-fc0dd2e0d619: 54
        6ea65117-4fa8-4099-ae61-4619ec980aae: 55
        710b061e-3557-4f04-b4a6-8cd2c2eea555: 56
        71325845-078b-439a-a27c-df49a583653e: 57
        7214109e-3153-466b-9a44-978eee87565b: 58
        73625891-06c1-4954-a0a4-8f103a49fdfb: 59
        73a427fe-ed60-4d80-93bc-427031cb465a: 60
        7452b0cf-67c8-4d75-8e83-40a7e3c7b896: 61
        76e8b7b8-6483-4843-bb72-1d235cc888ab: 62
        7a7fe423-e1ff-4fff-99c5-7e514913cddc: 63
        83cb3524-9f5a-4fe1-9e3e-abc465381da1: 64
        8bfe62ef-5cd2-45a8-aa21-e3653b57cb3d: 65
        9164fe22-56a2-4f8d-943e-5904381ce1e6: 66
        927a3bca-cdd7-4dc6-93a7-221595bad81f: 67
        975b192b-4f83-483d-8a96-6d4ce451dffd: 68
        976bbb14-bfca-458f-9051-2999484a3450: 69
        9aee65eb-b8a2-41a0-b0bf-599a7b5b4eca: 70
        9b019662-9973-4ea8-9882-8462b6fe4eda: 71
        9ccfb79a-8a67-4385-8fb1-95a2bfa2a644: 72
        9fc077fa-5d55-4e5c-8c66-c800354541bd: 73
        a07e9aa1-0a1d-4b82-926b-acab5eb5df7f: 74
        a2e2b084-88db-4c47-aac3-641886afc296: 75
        ab41a510-f017-4e9b-937a-4e6569b75609: 76
        abd7b08a-2f1a-435e-98e0-5bd2bb31fe15: 77
        ad759d34-5e58-4f6e-b04e-a32bb094ca23: 78
        b128af02-5e4d-4643-b1e4-32959cb4947b: 79
        b14821e4-139c-48f1-8944-06a2073f5301: 80
        b2a2d546-1436-48c3-a1e0-5811ea303328: 81
        b467871e-1eab-4001-bfdb-1ff81ce8b016: 82
        b7258783-b977-4611-8bd3-ca06ad68f67c: 83
        b75253ea-7bd3-42d7-9734-b3c9b661a9b6: 84
        b94b2476-de4f-40a5-b6f4-9bc93322620f: 85
        ba0dfbde-8c4a-431f-a67e-e7d35a7a231e: 86
        bd3fbffe-1a75-4f42-97b7-425e6ce6fc92: 87
        c0b1c7be-1f58-42ae-8ba0-186d6a5731d5: 88
        c1ce5a0b-e28a-4ea6-9547-2f1dc65e8a5d: 89
        c40afa5d-ddfb-4be3-ac01-8884db4ee7b8: 90
        c5d97031-4e34-4058-8f21-758542d14deb: 91
        c7eab618-aee1-4e8f-b3a9-8cf629ddce19: 92
        cbc6fd8d-82a3-40d5-88cf-e12be767c739: 93
        cd0b4773-4fa8-451a-b192-4992e794188f: 94
        ce99cb3a-9cce-4d11-ad08-2d8cc5e177cb: 95
        cee5a91d-b7ab-48b1-8443-7763d2846759: 96
        cfb4ba2f-6e46-434f-99eb-ba9d59000ffe: 97
        cfed821c-053a-4fa6-a77e-36100e163814: 98
        d0a43a28-20fa-4dda-a897-d65f080f7e39: 99
        d4d411bd-1fec-4b55-9fa2-307b4b18e2f6: 100
        da375c75-19ed-4138-b736-a4784e49a9b8: 101
        dba0d537-34f8-4274-9af4-bd94ab4af03e: 102
        dc861739-ce9e-40e6-92ee-1b41fa06705c: 103
        dce65d19-9bbe-4380-bf98-8f20b1e9bdce: 104
        dd9516b0-4e92-4bd6-b22c-789425c3ab51: 105
        e66c4160-eaa2-4819-82bc-5e31de746e25: 106
        e6a91909-80a3-4aae-8c7f-a9c5e0d47b09: 107
        e9125f78-8ad0-40ae-8289-6e78b73f0e9e: 108
        ec212792-ce52-4e7a-93a7-5f630b32c2f7: 109
        f6f5994c-cc7d-4a61-9e4f-716a5714c58c: 110
        f774b2b4-dd50-4dff-95c6-a51d3897cd4c: 111
        fa401e78-ef3a-4cc9-b392-10246ee30fe9: 112
        fc174751-3e4c-4213-bc39-eacaa93d6c22: 113
        fdf463a1-5596-4c53-a8cf-c0ff18e6f199: 114
      classes_vector_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 115
        - !!python/object/apply:numpy.dtype
          args:
          - U36
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - 144
          - 4
          - 8
        - false
        - !!binary |
          MAAAADAAAAA3AAAAOQAAAGUAAABkAAAAZgAAADAAAAAtAAAAYwAAADYAAABiAAAAZQAAAC0AAAA0
          AAAAOQAAADQAAAA1AAAALQAAAGIAAAAxAAAAYQAAAGEAAAAtAAAAZgAAADgAAABmAAAAOQAAADgA
          AAA1AAAAOQAAADUAAAAyAAAAZgAAADYAAAA4AAAAMAAAADAAAAA5AAAAOAAAAGEAAAA2AAAAZgAA
          ADQAAAAtAAAAMwAAADIAAAAzAAAAOQAAAC0AAAA0AAAANAAAAGEAAAA1AAAALQAAADkAAABhAAAA
          MwAAAGUAAAAtAAAAYwAAAGUAAAA5AAAANwAAADIAAAAzAAAANAAAADYAAABlAAAANgAAADgAAAAy
          AAAAMAAAADQAAAA4AAAAOAAAADIAAAA1AAAAYgAAAGQAAAAtAAAAMgAAAGIAAAAwAAAAZQAAAC0A
          AAA0AAAAYgAAADMAAABkAAAALQAAADkAAAA2AAAAMAAAAGQAAAAtAAAAZgAAADYAAAA1AAAAYQAA
          ADgAAABjAAAAOQAAAGIAAAA2AAAAZQAAAGQAAAA4AAAAMAAAADUAAABlAAAAZgAAADIAAAA1AAAA
          ZAAAAGEAAAAtAAAAMQAAAGYAAAAyAAAAZgAAAC0AAAA0AAAANwAAADgAAAA5AAAALQAAAGIAAABj
          AAAAOQAAAGIAAAAtAAAAYgAAADQAAAA3AAAAMgAAAGEAAAA0AAAAOQAAADEAAAA5AAAANgAAAGMA
          AAA5AAAAMAAAAGYAAAAxAAAAYwAAAGMAAABlAAAANwAAADAAAAAtAAAANAAAAGYAAAAzAAAAMgAA
          AC0AAAA0AAAAYQAAADUAAAAwAAAALQAAADkAAABkAAAAYwAAADcAAAAtAAAANgAAADYAAABjAAAA
          MAAAADEAAAA5AAAAYwAAADcAAABjAAAAZgAAADMAAABhAAAAMQAAADMAAAA2AAAAYwAAADMAAAAz
          AAAAMQAAAGMAAAAtAAAAZAAAAGIAAAA5AAAAYQAAAC0AAAA0AAAAYgAAAGYAAAAwAAAALQAAAGIA
          AAA3AAAAZgAAADUAAAAtAAAANgAAADkAAAA0AAAAMwAAADUAAABjAAAAYgAAADgAAAAxAAAANQAA
          ADgAAAAzAAAAMQAAADQAAAA1AAAAOAAAADIAAAAyAAAAZgAAADMAAAAtAAAAYgAAAGUAAAAzAAAA
          NQAAAC0AAAA0AAAAZAAAADAAAAA3AAAALQAAAGEAAAAxAAAAMQAAADkAAAAtAAAAZAAAADEAAAAy
          AAAAYgAAADYAAABjAAAAMAAAADYAAAA2AAAAZQAAAGUAAAA5AAAAMQAAADUAAAAwAAAAOAAAAGMA
          AABiAAAAMQAAAGYAAAAtAAAAOAAAADMAAAAzAAAAMwAAAC0AAAA0AAAANgAAADEAAABkAAAALQAA
          ADkAAAAyAAAAOQAAADgAAAAtAAAAOQAAADcAAABkAAAAMQAAAGIAAAAyAAAAMwAAAGEAAAA0AAAA
          YgAAAGYAAABiAAAAMQAAADYAAAA5AAAANgAAADAAAAA0AAAANgAAAGQAAAAtAAAANAAAADEAAABk
          AAAANAAAAC0AAAA0AAAAMQAAAGQAAABkAAAALQAAAGIAAABjAAAAZQAAAGYAAAAtAAAAZAAAADIA
          AABmAAAAMgAAADEAAABhAAAAOQAAADgAAAA4AAAAYgAAADUAAAAwAAAAMQAAADgAAABkAAAAOQAA
          AGQAAAAwAAAAZgAAAGQAAAAtAAAAMAAAAGMAAAA2AAAAMAAAAC0AAAA0AAAAMQAAAGEAAABiAAAA
          LQAAADgAAAA5AAAANgAAAGYAAAAtAAAAMgAAADgAAAA5AAAANAAAAGMAAAA4AAAANwAAAGUAAAAx
          AAAAMgAAADMAAAA5AAAAMQAAADkAAAAzAAAAYgAAAGUAAAA0AAAAMQAAADkAAAAtAAAANwAAADYA
          AABkAAAAMwAAAC0AAAA0AAAAMQAAADgAAABmAAAALQAAADgAAAA0AAAAZAAAAGUAAAAtAAAAYwAA
          ADUAAAA4AAAAZAAAAGMAAAA3AAAAMwAAADAAAAA4AAAAMgAAAGMAAAA0AAAAMQAAADkAAAA0AAAA
          NgAAADIAAAAyAAAANwAAAGIAAAAtAAAAYwAAADUAAABlAAAAZAAAAC0AAAA0AAAAZAAAADYAAAA1
          AAAALQAAAGEAAAA1AAAAZAAAADAAAAAtAAAANwAAADAAAAAwAAAANAAAADkAAAA0AAAANwAAADMA
          AABlAAAAOQAAADEAAAA5AAAAMQAAAGEAAAAwAAAANgAAAGQAAAAzAAAAOAAAADcAAAAtAAAAMwAA
          ADUAAAA0AAAAMQAAAC0AAAA0AAAAMAAAADYAAABhAAAALQAAADkAAABjAAAAOAAAADQAAAAtAAAA
          ZQAAADkAAAA5AAAANQAAADYAAABlAAAAYQAAADkAAABjAAAAYwAAADkAAAA0AAAAMQAAAGQAAABm
          AAAAMgAAAGIAAABiAAAAMwAAAGIAAAAtAAAAMAAAADUAAAA4AAAAYgAAAC0AAAA0AAAAMQAAADIA
          AAAxAAAALQAAADgAAABkAAAAYgAAAGIAAAAtAAAAYwAAADIAAABhAAAANgAAADIAAAAwAAAAMwAA
          AGEAAABjAAAAYQAAADMAAABiAAAAMQAAAGYAAABlAAAAMwAAADQAAAAzAAAAMwAAADMAAAAtAAAA
          NQAAADEAAAA1AAAANQAAAC0AAAA0AAAAYQAAADQAAAA2AAAALQAAAGIAAAAxAAAAOAAAAGQAAAAt
          AAAAMgAAADkAAAA4AAAAZAAAADkAAAAyAAAANgAAADgAAAA3AAAAMwAAADEAAAA2AAAAMgAAADAA
          AAA0AAAAOAAAADAAAABlAAAAZQAAADgAAAAtAAAAYwAAAGEAAAA5AAAAOQAAAC0AAAA0AAAANAAA
          AGQAAABhAAAALQAAAGIAAAAwAAAAZAAAADAAAAAtAAAANgAAAGMAAABlAAAAMgAAAGQAAAAyAAAA
          ZQAAADEAAABmAAAAYwAAAGIAAAAyAAAAMgAAADcAAAA1AAAAYgAAADMAAAAyAAAAMwAAAGQAAAAt
          AAAANQAAADMAAABhAAAAOQAAAC0AAAA0AAAANwAAADUAAAA3AAAALQAAAGEAAAA0AAAANwAAADMA
          AAAtAAAAMgAAAGYAAABhAAAAMQAAADEAAABkAAAAYgAAAGUAAAA3AAAANwAAAGYAAABlAAAAMgAA
          ADkAAABlAAAAYgAAAGYAAAA4AAAAMwAAADMAAAAtAAAAYwAAADIAAAAyAAAAMwAAAC0AAAA0AAAA
          OAAAAGYAAAA2AAAALQAAAGIAAAAxAAAAZQAAADcAAAAtAAAAYwAAAGIAAABmAAAAMAAAAGEAAAA0
          AAAAZQAAADYAAABhAAAAYgAAAGYAAAAzAAAAMgAAAGMAAAAxAAAAMAAAADgAAAA5AAAAYQAAAGMA
          AAAtAAAAZQAAADkAAABjAAAAOAAAAC0AAAA0AAAAZAAAAGUAAABhAAAALQAAADgAAAA5AAAAMQAA
          AGYAAAAtAAAANAAAADMAAABmAAAAYgAAADkAAAAzAAAAMgAAAGEAAABhAAAANgAAAGYAAAA5AAAA
          MgAAAGMAAABkAAAAMQAAADUAAAA1AAAANwAAADEAAAAtAAAAMQAAAGMAAAA5AAAAZgAAAC0AAAA0
          AAAANwAAADYAAAA0AAAALQAAAGEAAAAyAAAAOAAAADEAAAAtAAAAOAAAADYAAAAxAAAAZgAAADQA
          AABhAAAAZAAAADgAAABmAAAANQAAAGQAAAAzAAAAMgAAAGQAAAA2AAAAYQAAADkAAABjAAAANwAA
          ADYAAAAtAAAAOQAAAGEAAAA1AAAANAAAAC0AAAA0AAAAMQAAADcAAABhAAAALQAAAGIAAABhAAAA
          NgAAAGUAAAAtAAAAZgAAADQAAAAwAAAAMgAAADkAAAAzAAAAOAAAAGUAAAAyAAAAYwAAAGIAAAAx
          AAAAMwAAADAAAAAxAAAAMAAAAGEAAAA4AAAANwAAAGIAAAAtAAAAOQAAAGEAAAAyAAAAMgAAAC0A
          AAA0AAAAMQAAADgAAAA3AAAALQAAAGIAAABiAAAANwAAAGYAAAAtAAAAOAAAADkAAAAyAAAANQAA
          AGQAAAAwAAAAOAAAADYAAABkAAAAMAAAAGYAAAAyAAAAMwAAADAAAAA4AAAANAAAADEAAAA1AAAA
          NQAAADgAAAAtAAAAMAAAADQAAABmAAAAMgAAAC0AAAA0AAAANAAAAGQAAAAzAAAALQAAADkAAABi
          AAAAOAAAADIAAAAtAAAAMQAAADkAAABiAAAAYQAAAGIAAAA1AAAAZgAAAGMAAAA2AAAAOAAAAGIA
          AABlAAAAMwAAADEAAAA4AAAAZgAAADcAAAAxAAAAMwAAAGEAAAAtAAAAZQAAAGIAAABlAAAAOQAA
          AC0AAAA0AAAANQAAAGUAAAAxAAAALQAAADkAAABmAAAAMAAAAGMAAAAtAAAAMQAAADAAAAAxAAAA
          ZQAAADQAAABiAAAAYgAAADEAAABiAAAAYgAAADAAAABlAAAAMwAAADEAAABiAAAAMwAAAGMAAAA1
          AAAAMwAAADYAAAAtAAAANwAAADUAAAAzAAAAZAAAAC0AAAA0AAAAYwAAADUAAAA5AAAALQAAADgA
          AAA2AAAAMwAAADQAAAAtAAAAYwAAADYAAABlAAAAZgAAADcAAABlAAAAYgAAADEAAABlAAAAYQAA
          AGQAAAA0AAAAMwAAADIAAABkAAAAMgAAADYAAAAyAAAANQAAAGMAAAAtAAAAOAAAADAAAAA4AAAA
          MAAAAC0AAAA0AAAAYgAAADgAAAAxAAAALQAAAGEAAAAxAAAAMAAAADIAAAAtAAAANgAAAGYAAABh
          AAAAOQAAADkAAAA3AAAAMAAAAGQAAAAyAAAANwAAADUAAABhAAAAMwAAADMAAAAyAAAAZgAAAGQA
          AAA1AAAAYgAAADcAAAAtAAAAYgAAAGUAAAA3AAAANwAAAC0AAAA0AAAAZQAAADMAAAA5AAAALQAA
          AGEAAABiAAAANAAAAGUAAAAtAAAANgAAADUAAABmAAAAZQAAADEAAAA3AAAANwAAAGIAAABkAAAA
          ZgAAAGMAAABjAAAAMwAAADQAAABmAAAAMgAAAGYAAAA4AAAANAAAADgAAAAtAAAAMwAAAGQAAABk
          AAAAYQAAAC0AAAA0AAAANwAAAGQAAABiAAAALQAAADgAAAA3AAAAZAAAADIAAAAtAAAAMAAAADYA
          AAA1AAAAZgAAADcAAAA1AAAAMQAAADMAAAA1AAAANgAAAGUAAABjAAAAMwAAADkAAAAwAAAAZQAA
          ADYAAAA5AAAAMwAAADAAAAAtAAAAYgAAAGEAAAAwAAAAMQAAAC0AAAA0AAAAOQAAADkAAAA2AAAA
          LQAAADkAAAA2AAAAMQAAADcAAAAtAAAAYwAAAGYAAAAyAAAAOQAAAGIAAAAwAAAAYQAAAGEAAABm
          AAAAOAAAAGQAAAA0AAAAMwAAAGMAAABkAAAAYQAAADAAAABhAAAANAAAADgAAAAtAAAANQAAADgA
          AAA0AAAAZgAAAC0AAAA0AAAAYgAAADMAAAA5AAAALQAAADkAAAAwAAAANwAAADUAAAAtAAAAZQAA
          ADcAAAA1AAAAZgAAADMAAABlAAAANAAAADYAAABjAAAAYgAAAGEAAABjAAAAMwAAAGQAAAA0AAAA
          MAAAADYAAABhAAAAMgAAAGMAAAAtAAAAYgAAAGYAAAA1AAAAMwAAAC0AAAA0AAAANQAAAGEAAAA4
          AAAALQAAAGIAAAAzAAAAYgAAAGQAAAAtAAAAZQAAADUAAABhAAAAZgAAAGYAAAAwAAAANgAAAGUA
          AAA3AAAAYgAAADkAAAA1AAAAMwAAAGQAAABmAAAAOAAAAGUAAABjAAAAMwAAAGMAAAAtAAAANgAA
          AGIAAAA2AAAAYwAAAC0AAAA0AAAAYQAAAGIAAAA4AAAALQAAAGEAAAA5AAAAMwAAADIAAAAtAAAA
          YwAAAGQAAABiAAAAZgAAAGQAAAA2AAAAOQAAADkAAAAxAAAAZAAAADkAAAAwAAAAMwAAAGUAAAA3
          AAAAYQAAADIAAABiAAAAZAAAADgAAAAtAAAAMgAAADIAAAA0AAAAZAAAAC0AAAA0AAAANAAAADMA
          AAAzAAAALQAAAGEAAAA1AAAAOQAAAGQAAAAtAAAAYgAAAGEAAAAwAAAAYwAAADcAAAA4AAAAMQAA
          ADAAAABhAAAAYwAAAGEAAAA5AAAAMwAAAGYAAAA0AAAAZgAAAGEAAAAzAAAAMwAAAGQAAAAtAAAA
          NAAAAGIAAABjAAAAOAAAAC0AAAA0AAAAYgAAAGUAAAA1AAAALQAAAGEAAABhAAAANAAAADIAAAAt
          AAAAOAAAAGIAAAA1AAAANgAAADgAAABjAAAAZgAAAGEAAAA4AAAAMAAAAGMAAABiAAAANAAAADIA
          AAA1AAAAYQAAAGIAAAAwAAAAMAAAADQAAAAtAAAAZgAAADcAAABmAAAAMQAAAC0AAAA0AAAANgAA
          ADAAAABmAAAALQAAAGEAAAAxAAAAYwAAADcAAAAtAAAAMQAAADYAAAAwAAAAZAAAAGMAAAA2AAAA
          MgAAADgAAAAzAAAAZQAAADgAAABiAAAANAAAAGIAAAA5AAAAMAAAADMAAAA3AAAANAAAADYAAAAt
          AAAANAAAAGIAAAAzAAAAZQAAAC0AAAA0AAAAMQAAAGUAAAA2AAAALQAAADkAAAAwAAAAMAAAADMA
          AAAtAAAAZQAAAGIAAABlAAAAMQAAADUAAAAwAAAAYQAAAGUAAAAyAAAAZgAAADYAAAAxAAAANAAA
          AGMAAAA2AAAANAAAAGUAAAA0AAAAOAAAADIAAAAtAAAAOAAAADUAAAA4AAAAOAAAAC0AAAA0AAAA
          MwAAAGIAAABiAAAALQAAADkAAABhAAAAZQAAADgAAAAtAAAAYwAAADcAAAAyAAAANgAAADIAAABj
          AAAAMQAAADMAAAA3AAAAZgAAAGYAAABhAAAANAAAAGUAAAA3AAAAZQAAADYAAAAyAAAAMwAAAGEA
          AAAtAAAAYgAAAGQAAABhAAAANQAAAC0AAAA0AAAAOQAAAGYAAAA3AAAALQAAAGEAAAAwAAAAMgAA
          AGMAAAAtAAAAZAAAAGYAAAA4AAAANAAAAGMAAAAyAAAAZgAAADgAAAAwAAAAZgAAADcAAAA3AAAA
          NQAAADEAAAA1AAAAMwAAADcAAAA4AAAAYwAAADEAAAAtAAAANQAAADgAAAA1AAAAMwAAAC0AAAA0
          AAAANQAAADgAAABhAAAALQAAAGEAAABmAAAAOQAAADAAAAAtAAAAZgAAAGEAAABmAAAAZQAAADcA
          AAA4AAAANAAAADkAAABiAAAAYQAAAGUAAAAxAAAANQAAADMAAAAyAAAANQAAAGMAAABkAAAAMwAA
          AGYAAAAtAAAAYQAAAGMAAAAzAAAAYQAAAC0AAAA0AAAANAAAAGQAAABjAAAALQAAAGIAAABhAAAA
          YwAAAGYAAAAtAAAAZgAAAGUAAAA1AAAAMgAAADMAAABhAAAANgAAAGYAAABjAAAAMAAAAGEAAABi
          AAAANQAAADYAAAAwAAAAYwAAADIAAABkAAAAYgAAADAAAAAtAAAAZAAAAGIAAAA1AAAANgAAAC0A
          AAA0AAAAYwAAADcAAAA2AAAALQAAAGEAAAA0AAAAZAAAAGMAAAAtAAAAYwAAAGYAAAAxAAAAZgAA
          AGMAAABiAAAANgAAAGYAAABlAAAANwAAADAAAABlAAAANQAAADgAAAA5AAAAYwAAADgAAAA2AAAA
          MAAAADAAAAAtAAAAYgAAAGQAAABhAAAAZAAAAC0AAAA0AAAAOAAAADAAAAA0AAAALQAAADgAAAA2
          AAAAZQAAADAAAAAtAAAAOQAAAGYAAAA4AAAAOQAAADMAAABmAAAAZQAAADEAAABmAAAAYQAAADgA
          AABhAAAANQAAAGEAAABiAAAAMQAAAGMAAABkAAAAYQAAADUAAAAtAAAANQAAAGQAAABiAAAAYgAA
          AC0AAAA0AAAANQAAADMAAABjAAAALQAAADgAAAA2AAAAMwAAADEAAAAtAAAAMwAAADQAAAA0AAAA
          MgAAAGQAAABmAAAAZAAAADkAAAAwAAAAZgAAADYAAABlAAAANQAAAGIAAAA5AAAAMwAAADkAAABl
          AAAAMQAAADkAAAAtAAAAYwAAAGUAAABiAAAAYwAAAC0AAAA0AAAAMAAAADAAAABhAAAALQAAAGIA
          AAAzAAAAZQAAADIAAAAtAAAANQAAADQAAABlAAAAZgAAADAAAABjAAAAMQAAAGYAAAA0AAAANwAA
          ADUAAAA2AAAANQAAAGQAAAA5AAAAMAAAADcAAABlAAAAMAAAADcAAAAtAAAAMAAAADgAAAA4AAAA
          YwAAAC0AAAA0AAAANAAAADUAAABkAAAALQAAAGEAAAA4AAAAMwAAADcAAAAtAAAAOQAAADMAAAA2
          AAAAYgAAADAAAABiAAAAMgAAADQAAAA5AAAAZgAAADUAAABmAAAANQAAAGUAAABkAAAANwAAAGEA
          AAAzAAAAOAAAAGMAAAAtAAAAZQAAAGYAAAAzAAAANwAAAC0AAAA0AAAAMgAAAGYAAABkAAAALQAA
          AGIAAAA5AAAAZAAAADEAAAAtAAAAYwAAAGEAAAA3AAAAMQAAADQAAAAyAAAAZgAAAGEAAABmAAAA
          NQAAADYAAAAzAAAANgAAADAAAAA0AAAAZgAAADgAAABiAAAAYgAAADAAAAAtAAAAOQAAADEAAABj
          AAAAMAAAAC0AAAA0AAAANAAAAGUAAAAxAAAALQAAADgAAAA1AAAANAAAAGIAAAAtAAAAYgAAADEA
          AAA1AAAAOAAAADgAAABhAAAAOQAAADQAAAA0AAAANwAAAGIAAAAxAAAANgAAADEAAABhAAAANAAA
          ADAAAAAzAAAAMAAAAGUAAAAtAAAAMwAAADAAAAAxAAAAOAAAAC0AAAA0AAAANgAAADAAAAAyAAAA
          LQAAADgAAAA0AAAAZgAAADIAAAAtAAAANAAAADMAAAA2AAAAYwAAAGIAAABkAAAAMgAAADUAAAAz
          AAAAYgAAAGQAAAA0AAAANgAAADMAAABhAAAAMAAAADYAAABjAAAAMwAAADkAAAAtAAAANwAAAGQA
          AAA3AAAAZQAAAC0AAAA0AAAANQAAADcAAABjAAAALQAAAGIAAAA4AAAAMwAAADIAAAAtAAAAOAAA
          AGQAAABlAAAAZQAAADUAAABhAAAAMgAAADYAAAA3AAAAZgAAADQAAAAyAAAANgAAADYAAAA1AAAA
          ZgAAADIAAAA0AAAAMgAAAGEAAAAtAAAAZgAAADIAAAA4AAAAMwAAAC0AAAA0AAAAOQAAADMAAAA1
          AAAALQAAADkAAABhAAAAMgAAAGEAAAAtAAAAYgAAAGMAAABkAAAAYgAAAGEAAAAwAAAAYgAAADAA
          AABjAAAAMAAAAGUAAAA2AAAANgAAADgAAAA2AAAANAAAAGIAAABhAAAAZQAAAGYAAAAtAAAAYgAA
          ADAAAAA3AAAAYgAAAC0AAAA0AAAANAAAADIAAAAxAAAALQAAAGIAAAA0AAAAMAAAADAAAAAtAAAA
          MgAAADAAAAA5AAAAMgAAAGEAAAA5AAAANwAAADcAAABmAAAAOAAAAGMAAABjAAAANgAAADkAAAAy
          AAAAYwAAAGYAAABjAAAAMAAAADkAAAAtAAAAMgAAAGUAAAAwAAAAOQAAAC0AAAA0AAAANwAAADMA
          AABlAAAALQAAADgAAAAwAAAAMAAAADgAAAAtAAAANwAAAGIAAABkAAAANgAAADMAAABjAAAAOQAA
          ADMAAAAwAAAANQAAAGQAAABmAAAANgAAADkAAAA2AAAAZAAAAGIAAAAxAAAAMgAAAGEAAAAtAAAA
          ZAAAADQAAAA3AAAAZgAAAC0AAAA0AAAANAAAAGEAAAAyAAAALQAAADkAAAA0AAAAMQAAAGEAAAAt
          AAAANAAAADIAAAA2AAAANQAAADUAAAAxAAAAYQAAADcAAAA1AAAANwAAADkAAAAwAAAANgAAAGEA
          AABmAAAAYwAAADgAAAA2AAAAOQAAADQAAAAtAAAAYgAAAGMAAAA1AAAAOAAAAC0AAAA0AAAAZQAA
          AGUAAABmAAAALQAAAGIAAABhAAAAZAAAADYAAAAtAAAAZQAAADcAAAA0AAAAYQAAADQAAAAxAAAA
          NwAAADAAAABjAAAAMgAAADcAAAA0AAAANgAAAGQAAAA1AAAAOQAAADIAAAA5AAAANgAAADYAAAAt
          AAAAMgAAAGEAAAAyAAAAZgAAAC0AAAA0AAAANQAAADYAAABjAAAALQAAAGIAAABkAAAAMAAAAGEA
          AAAtAAAAZgAAAGMAAAAwAAAAZAAAAGQAAAAyAAAAZQAAADAAAABkAAAANgAAADEAAAA5AAAANgAA
          AGUAAABhAAAANgAAADUAAAAxAAAAMQAAADcAAAAtAAAANAAAAGYAAABhAAAAOAAAAC0AAAA0AAAA
          MAAAADkAAAA5AAAALQAAAGEAAABlAAAANgAAADEAAAAtAAAANAAAADYAAAAxAAAAOQAAAGUAAABj
          AAAAOQAAADgAAAAwAAAAYQAAAGEAAABlAAAANwAAADEAAAAwAAAAYgAAADAAAAA2AAAAMQAAAGUA
          AAAtAAAAMwAAADUAAAA1AAAANwAAAC0AAAA0AAAAZgAAADAAAAA0AAAALQAAAGIAAAA0AAAAYQAA
          ADYAAAAtAAAAOAAAAGMAAABkAAAAMgAAAGMAAAAyAAAAZQAAAGUAAABhAAAANQAAADUAAAA1AAAA
          NwAAADEAAAAzAAAAMgAAADUAAAA4AAAANAAAADUAAAAtAAAAMAAAADcAAAA4AAAAYgAAAC0AAAA0
          AAAAMwAAADkAAABhAAAALQAAAGEAAAAyAAAANwAAAGMAAAAtAAAAZAAAAGYAAAA0AAAAOQAAAGEA
          AAA1AAAAOAAAADMAAAA2AAAANQAAADMAAABlAAAANwAAADIAAAAxAAAANAAAADEAAAAwAAAAOQAA
          AGUAAAAtAAAAMwAAADEAAAA1AAAAMwAAAC0AAAA0AAAANgAAADYAAABiAAAALQAAADkAAABhAAAA
          NAAAADQAAAAtAAAAOQAAADcAAAA4AAAAZQAAAGUAAABlAAAAOAAAADcAAAA1AAAANgAAADUAAABi
          AAAANwAAADMAAAA2AAAAMgAAADUAAAA4AAAAOQAAADEAAAAtAAAAMAAAADYAAABjAAAAMQAAAC0A
          AAA0AAAAOQAAADUAAAA0AAAALQAAAGEAAAAwAAAAYQAAADQAAAAtAAAAOAAAAGYAAAAxAAAAMAAA
          ADMAAABhAAAANAAAADkAAABmAAAAZAAAAGYAAABiAAAANwAAADMAAABhAAAANAAAADIAAAA3AAAA
          ZgAAAGUAAAAtAAAAZQAAAGQAAAA2AAAAMAAAAC0AAAA0AAAAZAAAADgAAAAwAAAALQAAADkAAAAz
          AAAAYgAAAGMAAAAtAAAANAAAADIAAAA3AAAAMAAAADMAAAAxAAAAYwAAAGIAAAA0AAAANgAAADUA
          AABhAAAANwAAADQAAAA1AAAAMgAAAGIAAAAwAAAAYwAAAGYAAAAtAAAANgAAADcAAABjAAAAOAAA
          AC0AAAA0AAAAZAAAADcAAAA1AAAALQAAADgAAABlAAAAOAAAADMAAAAtAAAANAAAADAAAABhAAAA
          NwAAAGUAAAAzAAAAYwAAADcAAABiAAAAOAAAADkAAAA2AAAANwAAADYAAABlAAAAOAAAAGIAAAA3
          AAAAYgAAADgAAAAtAAAANgAAADQAAAA4AAAAMwAAAC0AAAA0AAAAOAAAADQAAAAzAAAALQAAAGIA
          AABiAAAANwAAADIAAAAtAAAAMQAAAGQAAAAyAAAAMwAAADUAAABjAAAAYwAAADgAAAA4AAAAOAAA
          AGEAAABiAAAANwAAAGEAAAA3AAAAZgAAAGUAAAA0AAAAMgAAADMAAAAtAAAAZQAAADEAAABmAAAA
          ZgAAAC0AAAA0AAAAZgAAAGYAAABmAAAALQAAADkAAAA5AAAAYwAAADUAAAAtAAAANwAAAGUAAAA1
          AAAAMQAAADQAAAA5AAAAMQAAADMAAABjAAAAZAAAAGQAAABjAAAAOAAAADMAAABjAAAAYgAAADMA
          AAA1AAAAMgAAADQAAAAtAAAAOQAAAGYAAAA1AAAAYQAAAC0AAAA0AAAAZgAAAGUAAAAxAAAALQAA
          ADkAAABlAAAAMwAAAGUAAAAtAAAAYQAAAGIAAABjAAAANAAAADYAAAA1AAAAMwAAADgAAAAxAAAA
          ZAAAAGEAAAAxAAAAOAAAAGIAAABmAAAAZQAAADYAAAAyAAAAZQAAAGYAAAAtAAAANQAAAGMAAABk
          AAAAMgAAAC0AAAA0AAAANQAAAGEAAAA4AAAALQAAAGEAAABhAAAAMgAAADEAAAAtAAAAZQAAADMA
          AAA2AAAANQAAADMAAABiAAAANQAAADcAAABjAAAAYgAAADMAAABkAAAAOQAAADEAAAA2AAAANAAA
          AGYAAABlAAAAMgAAADIAAAAtAAAANQAAADYAAABhAAAAMgAAAC0AAAA0AAAAZgAAADgAAABkAAAA
          LQAAADkAAAA0AAAAMwAAAGUAAAAtAAAANQAAADkAAAAwAAAANAAAADMAAAA4AAAAMQAAAGMAAABl
          AAAAMQAAAGUAAAA2AAAAOQAAADIAAAA3AAAAYQAAADMAAABiAAAAYwAAAGEAAAAtAAAAYwAAAGQA
          AABkAAAANwAAAC0AAAA0AAAAZAAAAGMAAAA2AAAALQAAADkAAAAzAAAAYQAAADcAAAAtAAAAMgAA
          ADIAAAAxAAAANQAAADkAAAA1AAAAYgAAAGEAAABkAAAAOAAAADEAAABmAAAAOQAAADcAAAA1AAAA
          YgAAADEAAAA5AAAAMgAAAGIAAAAtAAAANAAAAGYAAAA4AAAAMwAAAC0AAAA0AAAAOAAAADMAAABk
          AAAALQAAADgAAABhAAAAOQAAADYAAAAtAAAANgAAAGQAAAA0AAAAYwAAAGUAAAA0AAAANQAAADEA
          AABkAAAAZgAAAGYAAABkAAAAOQAAADcAAAA2AAAAYgAAAGIAAABiAAAAMQAAADQAAAAtAAAAYgAA
          AGYAAABjAAAAYQAAAC0AAAA0AAAANQAAADgAAABmAAAALQAAADkAAAAwAAAANQAAADEAAAAtAAAA
          MgAAADkAAAA5AAAAOQAAADQAAAA4AAAANAAAAGEAAAAzAAAANAAAADUAAAAwAAAAOQAAAGEAAABl
          AAAAZQAAADYAAAA1AAAAZQAAAGIAAAAtAAAAYgAAADgAAABhAAAAMgAAAC0AAAA0AAAAMQAAAGEA
          AAAwAAAALQAAAGIAAAAwAAAAYgAAAGYAAAAtAAAANQAAADkAAAA5AAAAYQAAADcAAABiAAAANQAA
          AGIAAAA0AAAAZQAAAGMAAABhAAAAOQAAAGIAAAAwAAAAMQAAADkAAAA2AAAANgAAADIAAAAtAAAA
          OQAAADkAAAA3AAAAMwAAAC0AAAA0AAAAZQAAAGEAAAA4AAAALQAAADkAAAA4AAAAOAAAADIAAAAt
          AAAAOAAAADQAAAA2AAAAMgAAAGIAAAA2AAAAZgAAAGUAAAA0AAAAZQAAAGQAAABhAAAAOQAAAGMA
          AABjAAAAZgAAAGIAAAA3AAAAOQAAAGEAAAAtAAAAOAAAAGEAAAA2AAAANwAAAC0AAAA0AAAAMwAA
          ADgAAAA1AAAALQAAADgAAABmAAAAYgAAADEAAAAtAAAAOQAAADUAAABhAAAAMgAAAGIAAABmAAAA
          YQAAADIAAABhAAAANgAAADQAAAA0AAAAOQAAAGYAAABjAAAAMAAAADcAAAA3AAAAZgAAAGEAAAAt
          AAAANQAAAGQAAAA1AAAANQAAAC0AAAA0AAAAZQAAADUAAABjAAAALQAAADgAAABjAAAANgAAADYA
          AAAtAAAAYwAAADgAAAAwAAAAMAAAADMAAAA1AAAANAAAADUAAAA0AAAAMQAAAGIAAABkAAAAYQAA
          ADAAAAA3AAAAZQAAADkAAABhAAAAYQAAADEAAAAtAAAAMAAAAGEAAAAxAAAAZAAAAC0AAAA0AAAA
          YgAAADgAAAAyAAAALQAAADkAAAAyAAAANgAAAGIAAAAtAAAAYQAAAGMAAABhAAAAYgAAADUAAABl
          AAAAYgAAADUAAABkAAAAZgAAADcAAABmAAAAYQAAADIAAABlAAAAMgAAAGIAAAAwAAAAOAAAADQA
          AAAtAAAAOAAAADgAAABkAAAAYgAAAC0AAAA0AAAAYwAAADQAAAA3AAAALQAAAGEAAABhAAAAYwAA
          ADMAAAAtAAAANgAAADQAAAAxAAAAOAAAADgAAAA2AAAAYQAAAGYAAABjAAAAMgAAADkAAAA2AAAA
          YQAAAGIAAAA0AAAAMQAAAGEAAAA1AAAAMQAAADAAAAAtAAAAZgAAADAAAAAxAAAANwAAAC0AAAA0
          AAAAZQAAADkAAABiAAAALQAAADkAAAAzAAAANwAAAGEAAAAtAAAANAAAAGUAAAA2AAAANQAAADYA
          AAA5AAAAYgAAADcAAAA1AAAANgAAADAAAAA5AAAAYQAAAGIAAABkAAAANwAAAGIAAAAwAAAAOAAA
          AGEAAAAtAAAAMgAAAGYAAAAxAAAAYQAAAC0AAAA0AAAAMwAAADUAAABlAAAALQAAADkAAAA4AAAA
          ZQAAADAAAAAtAAAANQAAAGIAAABkAAAAMgAAAGIAAABiAAAAMwAAADEAAABmAAAAZQAAADEAAAA1
          AAAAYQAAAGQAAAA3AAAANQAAADkAAABkAAAAMwAAADQAAAAtAAAANQAAAGUAAAA1AAAAOAAAAC0A
          AAA0AAAAZgAAADYAAABlAAAALQAAAGIAAAAwAAAANAAAAGUAAAAtAAAAYQAAADMAAAAyAAAAYgAA
          AGIAAAAwAAAAOQAAADQAAABjAAAAYQAAADIAAAAzAAAAYgAAADEAAAAyAAAAOAAAAGEAAABmAAAA
          MAAAADIAAAAtAAAANQAAAGUAAAA0AAAAZAAAAC0AAAA0AAAANgAAADQAAAAzAAAALQAAAGIAAAAx
          AAAAZQAAADQAAAAtAAAAMwAAADIAAAA5AAAANQAAADkAAABjAAAAYgAAADQAAAA5AAAANAAAADcA
          AABiAAAAYgAAADEAAAA0AAAAOAAAADIAAAAxAAAAZQAAADQAAAAtAAAAMQAAADMAAAA5AAAAYwAA
          AC0AAAA0AAAAOAAAAGYAAAAxAAAALQAAADgAAAA5AAAANAAAADQAAAAtAAAAMAAAADYAAABhAAAA
          MgAAADAAAAA3AAAAMwAAAGYAAAA1AAAAMwAAADAAAAAxAAAAYgAAADIAAABhAAAAMgAAAGQAAAA1
          AAAANAAAADYAAAAtAAAAMQAAADQAAAAzAAAANgAAAC0AAAA0AAAAOAAAAGMAAAAzAAAALQAAAGEA
          AAAxAAAAZQAAADAAAAAtAAAANQAAADgAAAAxAAAAMQAAAGUAAABhAAAAMwAAADAAAAAzAAAAMwAA
          ADIAAAA4AAAAYgAAADQAAAA2AAAANwAAADgAAAA3AAAAMQAAAGUAAAAtAAAAMQAAAGUAAABhAAAA
          YgAAAC0AAAA0AAAAMAAAADAAAAAxAAAALQAAAGIAAABmAAAAZAAAAGIAAAAtAAAAMQAAAGYAAABm
          AAAAOAAAADEAAABjAAAAZQAAADgAAABiAAAAMAAAADEAAAA2AAAAYgAAADcAAAAyAAAANQAAADgA
          AAA3AAAAOAAAADMAAAAtAAAAYgAAADkAAAA3AAAANwAAAC0AAAA0AAAANgAAADEAAAAxAAAALQAA
          ADgAAABiAAAAZAAAADMAAAAtAAAAYwAAAGEAAAAwAAAANgAAAGEAAABkAAAANgAAADgAAABmAAAA
          NgAAADcAAABjAAAAYgAAADcAAAA1AAAAMgAAADUAAAAzAAAAZQAAAGEAAAAtAAAANwAAAGIAAABk
          AAAAMwAAAC0AAAA0AAAAMgAAAGQAAAA3AAAALQAAADkAAAA3AAAAMwAAADQAAAAtAAAAYgAAADMA
          AABjAAAAOQAAAGIAAAA2AAAANgAAADEAAABhAAAAOQAAAGIAAAA2AAAAYgAAADkAAAA0AAAAYgAA
          ADIAAAA0AAAANwAAADYAAAAtAAAAZAAAAGUAAAA0AAAAZgAAAC0AAAA0AAAAMAAAAGEAAAA1AAAA
          LQAAAGIAAAA2AAAAZgAAADQAAAAtAAAAOQAAAGIAAABjAAAAOQAAADMAAAAzAAAAMgAAADIAAAA2
          AAAAMgAAADAAAABmAAAAYgAAAGEAAAAwAAAAZAAAAGYAAABiAAAAZAAAAGUAAAAtAAAAOAAAAGMA
          AAA0AAAAYQAAAC0AAAA0AAAAMwAAADEAAABmAAAALQAAAGEAAAA2AAAANwAAAGUAAAAtAAAAZQAA
          ADcAAABkAAAAMwAAADUAAABhAAAANwAAAGEAAAAyAAAAMwAAADEAAABlAAAAYgAAAGQAAAAzAAAA
          ZgAAAGIAAABmAAAAZgAAAGUAAAAtAAAAMQAAAGEAAAA3AAAANQAAAC0AAAA0AAAAZgAAADQAAAAy
          AAAALQAAADkAAAA3AAAAYgAAADcAAAAtAAAANAAAADIAAAA1AAAAZQAAADYAAABjAAAAZQAAADYA
          AABmAAAAYwAAADkAAAAyAAAAYwAAADAAAABiAAAAMQAAAGMAAAA3AAAAYgAAAGUAAAAtAAAAMQAA
          AGYAAAA1AAAAOAAAAC0AAAA0AAAAMgAAAGEAAABlAAAALQAAADgAAABiAAAAYQAAADAAAAAtAAAA
          MQAAADgAAAA2AAAAZAAAADYAAABhAAAANQAAADcAAAAzAAAAMQAAAGQAAAA1AAAAYwAAADEAAABj
          AAAAZQAAADUAAABhAAAAMAAAAGIAAAAtAAAAZQAAADIAAAA4AAAAYQAAAC0AAAA0AAAAZQAAAGEA
          AAA2AAAALQAAADkAAAA1AAAANAAAADcAAAAtAAAAMgAAAGYAAAAxAAAAZAAAAGMAAAA2AAAANQAA
          AGUAAAA4AAAAYQAAADUAAABkAAAAYwAAADQAAAAwAAAAYQAAAGYAAABhAAAANQAAAGQAAAAtAAAA
          ZAAAAGQAAABmAAAAYgAAAC0AAAA0AAAAYgAAAGUAAAAzAAAALQAAAGEAAABjAAAAMAAAADEAAAAt
          AAAAOAAAADgAAAA4AAAANAAAAGQAAABiAAAANAAAAGUAAABlAAAANwAAAGIAAAA4AAAAYwAAADUA
          AABkAAAAOQAAADcAAAAwAAAAMwAAADEAAAAtAAAANAAAAGUAAAAzAAAANAAAAC0AAAA0AAAAMAAA
          ADUAAAA4AAAALQAAADgAAABmAAAAMgAAADEAAAAtAAAANwAAADUAAAA4AAAANQAAADQAAAAyAAAA
          ZAAAADEAAAA0AAAAZAAAAGUAAABiAAAAYwAAADcAAABlAAAAYQAAAGIAAAA2AAAAMQAAADgAAAAt
          AAAAYQAAAGUAAABlAAAAMQAAAC0AAAA0AAAAZQAAADgAAABmAAAALQAAAGIAAAAzAAAAYQAAADkA
          AAAtAAAAOAAAAGMAAABmAAAANgAAADIAAAA5AAAAZAAAAGQAAABjAAAAZQAAADEAAAA5AAAAYwAA
          AGIAAABjAAAANgAAAGYAAABkAAAAOAAAAGQAAAAtAAAAOAAAADIAAABhAAAAMwAAAC0AAAA0AAAA
          MAAAAGQAAAA1AAAALQAAADgAAAA4AAAAYwAAAGYAAAAtAAAAZQAAADEAAAAyAAAAYgAAAGUAAAA3
          AAAANgAAADcAAABjAAAANwAAADMAAAA5AAAAYwAAAGQAAAAwAAAAYgAAADQAAAA3AAAANwAAADMA
          AAAtAAAANAAAAGYAAABhAAAAOAAAAC0AAAA0AAAANQAAADEAAABhAAAALQAAAGIAAAAxAAAAOQAA
          ADIAAAAtAAAANAAAADkAAAA5AAAAMgAAAGUAAAA3AAAAOQAAADQAAAAxAAAAOAAAADgAAABmAAAA
          YwAAAGUAAAA5AAAAOQAAAGMAAABiAAAAMwAAAGEAAAAtAAAAOQAAAGMAAABjAAAAZQAAAC0AAAA0
          AAAAZAAAADEAAAAxAAAALQAAAGEAAABkAAAAMAAAADgAAAAtAAAAMgAAAGQAAAA4AAAAYwAAAGMA
          AAA1AAAAZQAAADEAAAA3AAAANwAAAGMAAABiAAAAYwAAAGUAAABlAAAANQAAAGEAAAA5AAAAMQAA
          AGQAAAAtAAAAYgAAADcAAABhAAAAYgAAAC0AAAA0AAAAOAAAAGIAAAAxAAAALQAAADgAAAA0AAAA
          NAAAADMAAAAtAAAANwAAADcAAAA2AAAAMwAAAGQAAAAyAAAAOAAAADQAAAA2AAAANwAAADUAAAA5
          AAAAYwAAAGYAAABiAAAANAAAAGIAAABhAAAAMgAAAGYAAAAtAAAANgAAAGUAAAA0AAAANgAAAC0A
          AAA0AAAAMwAAADQAAABmAAAALQAAADkAAAA5AAAAZQAAAGIAAAAtAAAAYgAAAGEAAAA5AAAAZAAA
          ADUAAAA5AAAAMAAAADAAAAAwAAAAZgAAAGYAAABlAAAAYwAAAGYAAABlAAAAZAAAADgAAAAyAAAA
          MQAAAGMAAAAtAAAAMAAAADUAAAAzAAAAYQAAAC0AAAA0AAAAZgAAAGEAAAA2AAAALQAAAGEAAAA3
          AAAANwAAAGUAAAAtAAAAMwAAADYAAAAxAAAAMAAAADAAAABlAAAAMQAAADYAAAAzAAAAOAAAADEA
          AAA0AAAAZAAAADAAAABhAAAANAAAADMAAABhAAAAMgAAADgAAAAtAAAAMgAAADAAAABmAAAAYQAA
          AC0AAAA0AAAAZAAAAGQAAABhAAAALQAAAGEAAAA4AAAAOQAAADcAAAAtAAAAZAAAADYAAAA1AAAA
          ZgAAADAAAAA4AAAAMAAAAGYAAAA3AAAAZQAAADMAAAA5AAAAZAAAADQAAABkAAAANAAAADEAAAAx
          AAAAYgAAAGQAAAAtAAAAMQAAAGYAAABlAAAAYwAAAC0AAAA0AAAAYgAAADUAAAA1AAAALQAAADkA
          AABmAAAAYQAAADIAAAAtAAAAMwAAADAAAAA3AAAAYgAAADQAAABiAAAAMQAAADgAAABlAAAAMgAA
          AGYAAAA2AAAAZAAAAGEAAAAzAAAANwAAADUAAABjAAAANwAAADUAAAAtAAAAMQAAADkAAABlAAAA
          ZAAAAC0AAAA0AAAAMQAAADMAAAA4AAAALQAAAGIAAAA3AAAAMwAAADYAAAAtAAAAYQAAADQAAAA3
          AAAAOAAAADQAAABlAAAANAAAADkAAABhAAAAOQAAAGIAAAA4AAAAZAAAAGIAAABhAAAAMAAAAGQA
          AAA1AAAAMwAAADcAAAAtAAAAMwAAADQAAABmAAAAOAAAAC0AAAA0AAAAMgAAADcAAAA0AAAALQAA
          ADkAAABhAAAAZgAAADQAAAAtAAAAYgAAAGQAAAA5AAAANAAAAGEAAABiAAAANAAAAGEAAABmAAAA
          MAAAADMAAABlAAAAZAAAAGMAAAA4AAAANgAAADEAAAA3AAAAMwAAADkAAAAtAAAAYwAAAGUAAAA5
          AAAAZQAAAC0AAAA0AAAAMAAAAGUAAAA2AAAALQAAADkAAAAyAAAAZQAAAGUAAAAtAAAAMQAAAGIA
          AAA0AAAAMQAAAGYAAABhAAAAMAAAADYAAAA3AAAAMAAAADUAAABjAAAAZAAAAGMAAABlAAAANgAA
          ADUAAABkAAAAMQAAADkAAAAtAAAAOQAAAGIAAABiAAAAZQAAAC0AAAA0AAAAMwAAADgAAAAwAAAA
          LQAAAGIAAABmAAAAOQAAADgAAAAtAAAAOAAAAGYAAAAyAAAAMAAAAGIAAAAxAAAAZQAAADkAAABi
          AAAAZAAAAGMAAABlAAAAZAAAAGQAAAA5AAAANQAAADEAAAA2AAAAYgAAADAAAAAtAAAANAAAAGUA
          AAA5AAAAMgAAAC0AAAA0AAAAYgAAAGQAAAA2AAAALQAAAGIAAAAyAAAAMgAAAGMAAAAtAAAANwAA
          ADgAAAA5AAAANAAAADIAAAA1AAAAYwAAADMAAABhAAAAYgAAADUAAAAxAAAAZQAAADYAAAA2AAAA
          YwAAADQAAAAxAAAANgAAADAAAAAtAAAAZQAAAGEAAABhAAAAMgAAAC0AAAA0AAAAOAAAADEAAAA5
          AAAALQAAADgAAAAyAAAAYgAAAGMAAAAtAAAANQAAAGUAAAAzAAAAMQAAAGQAAABlAAAANwAAADQA
          AAA2AAAAZQAAADIAAAA1AAAAZQAAADYAAABhAAAAOQAAADEAAAA5AAAAMAAAADkAAAAtAAAAOAAA
          ADAAAABhAAAAMwAAAC0AAAA0AAAAYQAAAGEAAABlAAAALQAAADgAAABjAAAANwAAAGYAAAAtAAAA
          YQAAADkAAABjAAAANQAAAGUAAAAwAAAAZAAAADQAAAA3AAAAYgAAADAAAAA5AAAAZQAAADkAAAAx
          AAAAMgAAADUAAABmAAAANwAAADgAAAAtAAAAOAAAAGEAAABkAAAAMAAAAC0AAAA0AAAAMAAAAGEA
          AABlAAAALQAAADgAAAAyAAAAOAAAADkAAAAtAAAANgAAAGUAAAA3AAAAOAAAAGIAAAA3AAAAMwAA
          AGYAAAAwAAAAZQAAADkAAABlAAAAZQAAAGMAAAAyAAAAMQAAADIAAAA3AAAAOQAAADIAAAAtAAAA
          YwAAAGUAAAA1AAAAMgAAAC0AAAA0AAAAZQAAADcAAABhAAAALQAAADkAAAAzAAAAYQAAADcAAAAt
          AAAANQAAAGYAAAA2AAAAMwAAADAAAABiAAAAMwAAADIAAABjAAAAMgAAAGYAAAA3AAAAZgAAADYA
          AABmAAAANQAAADkAAAA5AAAANAAAAGMAAAAtAAAAYwAAAGMAAAA3AAAAZAAAAC0AAAA0AAAAYQAA
          ADYAAAAxAAAALQAAADkAAABlAAAANAAAAGYAAAAtAAAANwAAADEAAAA2AAAAYQAAADUAAAA3AAAA
          MQAAADQAAABjAAAANQAAADgAAABjAAAAZgAAADcAAAA3AAAANAAAAGIAAAAyAAAAYgAAADQAAAAt
          AAAAZAAAAGQAAAA1AAAAMAAAAC0AAAA0AAAAZAAAAGYAAABmAAAALQAAADkAAAA1AAAAYwAAADYA
          AAAtAAAAYQAAADUAAAAxAAAAZAAAADMAAAA4AAAAOQAAADcAAABjAAAAZAAAADQAAABjAAAAZgAA
          AGEAAAA0AAAAMAAAADEAAABlAAAANwAAADgAAAAtAAAAZQAAAGYAAAAzAAAAYQAAAC0AAAA0AAAA
          YwAAAGMAAAA5AAAALQAAAGIAAAAzAAAAOQAAADIAAAAtAAAAMQAAADAAAAAyAAAANAAAADYAAABl
          AAAAZQAAADMAAAAwAAAAZgAAAGUAAAA5AAAAZgAAAGMAAAAxAAAANwAAADQAAAA3AAAANQAAADEA
          AAAtAAAAMwAAAGUAAAA0AAAAYwAAAC0AAAA0AAAAMgAAADEAAAAzAAAALQAAAGIAAABjAAAAMwAA
          ADkAAAAtAAAAZQAAAGEAAABjAAAAYQAAAGEAAAA5AAAAMwAAAGQAAAA2AAAAYwAAADIAAAAyAAAA
          ZgAAAGQAAABmAAAANAAAADYAAAAzAAAAYQAAADEAAAAtAAAANQAAADUAAAA5AAAANgAAAC0AAAA0
          AAAAYwAAADUAAAAzAAAALQAAAGEAAAA4AAAAYwAAAGYAAAAtAAAAYwAAADAAAABmAAAAZgAAADEA
          AAA4AAAAZQAAADYAAABmAAAAMQAAADkAAAA5AAAA
      warn: true
    month: !!python/object:pytorch_forecasting.data.encoders.NaNLabelEncoder
      add_nan: false
      classes_: &id009
        '1': 0
        '10': 1
        '11': 2
        '12': 3
        '2': 4
        '3': 5
        '4': 6
        '5': 7
        '6': 8
        '7': 9
        '8': 10
        '9': 11
      classes_vector_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 12
        - !!python/object/apply:numpy.dtype
          args:
          - U2
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - 8
          - 4
          - 8
        - false
        - !!binary |
          MQAAAAAAAAAxAAAAMAAAADEAAAAxAAAAMQAAADIAAAAyAAAAAAAAADMAAAAAAAAANAAAAAAAAAA1
          AAAAAAAAADYAAAAAAAAANwAAAAAAAAA4AAAAAAAAADkAAAAAAAAA
      warn: true
    post_code: !!python/object:pytorch_forecasting.data.encoders.NaNLabelEncoder
      add_nan: false
      classes_: &id010
        '10829': 0
        '12159': 1
        '12355': 2
        '15366': 3
        '15834': 4
        '16515': 5
        '18198': 6
        '20459': 7
        '21244': 8
        '22889': 9
        '23611': 10
        '24558': 11
        '25767': 12
        '26125': 13
        '26388': 14
        '26632': 15
        '27386': 16
        '27619': 17
        '27809': 18
        '28215': 19
        '28816': 20
        '30926': 21
        '31228': 22
        '31275': 23
        '34497': 24
        '34613': 25
        '35753': 26
        '36157': 27
        '40227': 28
        '40595': 29
        '40670': 30
        '41564': 31
        '41836': 32
        '42109': 33
        '42781': 34
        '44227': 35
        '44866': 36
        '45892': 37
        '45897': 38
        '4603': 39
        '47226': 40
        '48529': 41
        '48599': 42
        '50374': 43
        '50769': 44
        '51429': 45
        '52074': 46
        '52080': 47
        '52379': 48
        '52428': 49
        '53604': 50
        '53797': 51
        '53881': 52
        '53902': 53
        '54295': 54
        '55128': 55
        '57074': 56
        '59174': 57
        '59269': 58
        '59929': 59
        '61184': 60
        '63071': 61
        '63322': 62
        '63636': 63
        '64289': 64
        '64720': 65
        '64732': 66
        '64846': 67
        '64853': 68
        '65795': 69
        '6667': 70
        '66996': 71
        '67122': 72
        '67482': 73
        '68163': 74
        '68623': 75
        '68647': 76
        '69123': 77
        '69251': 78
        '69509': 79
        '70193': 80
        '71093': 81
        '73207': 82
        '73342': 83
        '73635': 84
        '76135': 85
        '76351': 86
        '76669': 87
        '7751': 88
        '78462': 89
        '79111': 90
        '79211': 91
        '80993': 92
        '83115': 93
        '84543': 94
        '85132': 95
        '86551': 96
        '88263': 97
        '88422': 98
        '90411': 99
        '91257': 100
        '93073': 101
        '93087': 102
        '95326': 103
        '95361': 104
        '95515': 105
        '97705': 106
        '99099': 107
        '99631': 108
      classes_vector_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 109
        - !!python/object/apply:numpy.dtype
          args:
          - U5
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - 20
          - 4
          - 8
        - false
        - !!binary |
          MQAAADAAAAA4AAAAMgAAADkAAAAxAAAAMgAAADEAAAA1AAAAOQAAADEAAAAyAAAAMwAAADUAAAA1
          AAAAMQAAADUAAAAzAAAANgAAADYAAAAxAAAANQAAADgAAAAzAAAANAAAADEAAAA2AAAANQAAADEA
          AAA1AAAAMQAAADgAAAAxAAAAOQAAADgAAAAyAAAAMAAAADQAAAA1AAAAOQAAADIAAAAxAAAAMgAA
          ADQAAAA0AAAAMgAAADIAAAA4AAAAOAAAADkAAAAyAAAAMwAAADYAAAAxAAAAMQAAADIAAAA0AAAA
          NQAAADUAAAA4AAAAMgAAADUAAAA3AAAANgAAADcAAAAyAAAANgAAADEAAAAyAAAANQAAADIAAAA2
          AAAAMwAAADgAAAA4AAAAMgAAADYAAAA2AAAAMwAAADIAAAAyAAAANwAAADMAAAA4AAAANgAAADIA
          AAA3AAAANgAAADEAAAA5AAAAMgAAADcAAAA4AAAAMAAAADkAAAAyAAAAOAAAADIAAAAxAAAANQAA
          ADIAAAA4AAAAOAAAADEAAAA2AAAAMwAAADAAAAA5AAAAMgAAADYAAAAzAAAAMQAAADIAAAAyAAAA
          OAAAADMAAAAxAAAAMgAAADcAAAA1AAAAMwAAADQAAAA0AAAAOQAAADcAAAAzAAAANAAAADYAAAAx
          AAAAMwAAADMAAAA1AAAANwAAADUAAAAzAAAAMwAAADYAAAAxAAAANQAAADcAAAA0AAAAMAAAADIA
          AAAyAAAANwAAADQAAAAwAAAANQAAADkAAAA1AAAANAAAADAAAAA2AAAANwAAADAAAAA0AAAAMQAA
          ADUAAAA2AAAANAAAADQAAAAxAAAAOAAAADMAAAA2AAAANAAAADIAAAAxAAAAMAAAADkAAAA0AAAA
          MgAAADcAAAA4AAAAMQAAADQAAAA0AAAAMgAAADIAAAA3AAAANAAAADQAAAA4AAAANgAAADYAAAA0
          AAAANQAAADgAAAA5AAAAMgAAADQAAAA1AAAAOAAAADkAAAA3AAAANAAAADYAAAAwAAAAMwAAAAAA
          AAA0AAAANwAAADIAAAAyAAAANgAAADQAAAA4AAAANQAAADIAAAA5AAAANAAAADgAAAA1AAAAOQAA
          ADkAAAA1AAAAMAAAADMAAAA3AAAANAAAADUAAAAwAAAANwAAADYAAAA5AAAANQAAADEAAAA0AAAA
          MgAAADkAAAA1AAAAMgAAADAAAAA3AAAANAAAADUAAAAyAAAAMAAAADgAAAAwAAAANQAAADIAAAAz
          AAAANwAAADkAAAA1AAAAMgAAADQAAAAyAAAAOAAAADUAAAAzAAAANgAAADAAAAA0AAAANQAAADMA
          AAA3AAAAOQAAADcAAAA1AAAAMwAAADgAAAA4AAAAMQAAADUAAAAzAAAAOQAAADAAAAAyAAAANQAA
          ADQAAAAyAAAAOQAAADUAAAA1AAAANQAAADEAAAAyAAAAOAAAADUAAAA3AAAAMAAAADcAAAA0AAAA
          NQAAADkAAAAxAAAANwAAADQAAAA1AAAAOQAAADIAAAA2AAAAOQAAADUAAAA5AAAAOQAAADIAAAA5
          AAAANgAAADEAAAAxAAAAOAAAADQAAAA2AAAAMwAAADAAAAA3AAAAMQAAADYAAAAzAAAAMwAAADIA
          AAAyAAAANgAAADMAAAA2AAAAMwAAADYAAAA2AAAANAAAADIAAAA4AAAAOQAAADYAAAA0AAAANwAA
          ADIAAAAwAAAANgAAADQAAAA3AAAAMwAAADIAAAA2AAAANAAAADgAAAA0AAAANgAAADYAAAA0AAAA
          OAAAADUAAAAzAAAANgAAADUAAAA3AAAAOQAAADUAAAA2AAAANgAAADYAAAA3AAAAAAAAADYAAAA2
          AAAAOQAAADkAAAA2AAAANgAAADcAAAAxAAAAMgAAADIAAAA2AAAANwAAADQAAAA4AAAAMgAAADYA
          AAA4AAAAMQAAADYAAAAzAAAANgAAADgAAAA2AAAAMgAAADMAAAA2AAAAOAAAADYAAAA0AAAANwAA
          ADYAAAA5AAAAMQAAADIAAAAzAAAANgAAADkAAAAyAAAANQAAADEAAAA2AAAAOQAAADUAAAAwAAAA
          OQAAADcAAAAwAAAAMQAAADkAAAAzAAAANwAAADEAAAAwAAAAOQAAADMAAAA3AAAAMwAAADIAAAAw
          AAAANwAAADcAAAAzAAAAMwAAADQAAAAyAAAANwAAADMAAAA2AAAAMwAAADUAAAA3AAAANgAAADEA
          AAAzAAAANQAAADcAAAA2AAAAMwAAADUAAAAxAAAANwAAADYAAAA2AAAANgAAADkAAAA3AAAANwAA
          ADUAAAAxAAAAAAAAADcAAAA4AAAANAAAADYAAAAyAAAANwAAADkAAAAxAAAAMQAAADEAAAA3AAAA
          OQAAADIAAAAxAAAAMQAAADgAAAAwAAAAOQAAADkAAAAzAAAAOAAAADMAAAAxAAAAMQAAADUAAAA4
          AAAANAAAADUAAAA0AAAAMwAAADgAAAA1AAAAMQAAADMAAAAyAAAAOAAAADYAAAA1AAAANQAAADEA
          AAA4AAAAOAAAADIAAAA2AAAAMwAAADgAAAA4AAAANAAAADIAAAAyAAAAOQAAADAAAAA0AAAAMQAA
          ADEAAAA5AAAAMQAAADIAAAA1AAAANwAAADkAAAAzAAAAMAAAADcAAAAzAAAAOQAAADMAAAAwAAAA
          OAAAADcAAAA5AAAANQAAADMAAAAyAAAANgAAADkAAAA1AAAAMwAAADYAAAAxAAAAOQAAADUAAAA1
          AAAAMQAAADUAAAA5AAAANwAAADcAAAAwAAAANQAAADkAAAA5AAAAMAAAADkAAAA5AAAAOQAAADkA
          AAA2AAAAMwAAADEAAAA=
      warn: true
    weekday: !!python/object:pytorch_forecasting.data.encoders.NaNLabelEncoder
      add_nan: false
      classes_: &id011
        '0': 0
        '1': 1
        '2': 2
        '3': 3
        '4': 4
        '5': 5
        '6': 6
      classes_vector_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 7
        - !!python/object/apply:numpy.dtype
          args:
          - U1
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - 4
          - 4
          - 8
        - false
        - !!binary |
          MAAAADEAAAAyAAAAMwAAADQAAAA1AAAANgAAAA==
      warn: true
  constant_fill_strategy: null
  group_ids:
  - meter_id
  lags: null
  max_encoder_length: 72
  max_prediction_length: 24
  min_encoder_length: 36
  min_prediction_idx: !!python/object/apply:numpy._core.multiarray.scalar
  - &id002 !!python/object/apply:numpy.dtype
    args:
    - i8
    - false
    - true
    state: !!python/tuple
    - 3
    - <
    - null
    - null
    - null
    - -1
    - -1
    - 0
  - !!binary |
    AAAAAAAAAAA=
  min_prediction_length: 1
  predict_mode: false
  randomize_length: null
  scalers:
    Bruttoverdienst: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - &id004 !!python/object/apply:numpy.dtype
          args:
          - O8
          - false
          - true
          state: !!python/tuple
          - 3
          - '|'
          - null
          - null
          - null
          - -1
          - -1
          - 63
        - false
        - - Bruttoverdienst
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - &id003 !!python/object/apply:numpy.dtype
          args:
          - f8
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - -1
          - -1
          - 0
        - false
        - !!binary |
          7ZXXDK5Vp0A=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        5kw/AAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          jP91wo55eUA=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          HN7z0bxHBEE=
      with_mean: true
      with_std: true
    "Durchschnittsalter der Bev\xF6lkerung": !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - "Durchschnittsalter der Bev\xF6lkerung"
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          aK2jZpQERkA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        5kw/AAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          LzO7IDmh+z8=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          zj57rjzbB0A=
      with_mean: true
      with_std: true
    "Erwerbst\xE4tige": !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - "Erwerbst\xE4tige"
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          JdkrhrzfbUA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        5kw/AAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          vAXVr6ZYdkA=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          FX/gk7U1/0A=
      with_mean: true
      with_std: true
    Kaufkraft: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - Kaufkraft
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          euY7Ysl710A=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        5kw/AAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          A5S5fZkinEA=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          jSkQBbK8SEE=
      with_mean: true
      with_std: true
    Medianeinkommen: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - Medianeinkommen
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          a7XdLLL+qUA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        5kw/AAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          x35Wp1DaeUA=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          smgqce/iBEE=
      with_mean: true
      with_std: true
    Messwert_center: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - Messwert_center
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          yYvAvdPQBMA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        5kw/AAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          +6juyw0w/j8=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          lzvJB2J6DEA=
      with_mean: true
      with_std: true
    Messwert_scale: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - Messwert_scale
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          XJsjpPEM9j8=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        5kw/AAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          eCAW0+HuAkA=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          AuespWpnFkA=
      with_mean: true
      with_std: true
    "Neubauwohnungen in Ein- und Zweifamilienh\xE4usern": !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - "Neubauwohnungen in Ein- und Zweifamilienh\xE4usern"
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          FUONqImgQ0A=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        5kw/AAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          rY7t1SbMMkA=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          Ee4DQIQVdkA=
      with_mean: true
      with_std: true
    Neubauwohnungen je Einwohner: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - Neubauwohnungen je Einwohner
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          arvEwoD5C0A=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        5kw/AAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          lqg7GDGr9j8=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          sVdQVvcOAEA=
      with_mean: true
      with_std: true
    Schuldnerquote: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - Schuldnerquote
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          tNBwS3amI0A=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        5kw/AAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          4a833Vl6BUA=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          5ncYgdPUHEA=
      with_mean: true
      with_std: true
    "Siedlungsdichte in km\xB2": !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - "Siedlungsdichte in km\xB2"
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          gJ+qM7lAokA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        5kw/AAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          /qQePCS1lUA=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          3LXy4YFzPUE=
      with_mean: true
      with_std: true
    area: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - area
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          IV+3e3mYZEA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        5kw/AAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          9OgMQX2NYEA=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          496Itd0f0UA=
      with_mean: true
      with_std: true
    cloud_cover_total: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - cloud_cover_total
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          CT4WIQj25T8=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        5kw/AAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          gD7U1eQX0T8=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          T6AS9elCsj8=
      with_mean: true
      with_std: true
    encoder_length: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - encoder_length
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          AAAAAAAAAAA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        5kw/AAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          AAAAAAAA8D8=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          AAAAAAAAAAA=
      with_mean: true
      with_std: true
    humidity: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - humidity
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          ogI7YwYM6T8=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        5kw/AAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          29X/UA8KwD8=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          +5Qz9SQUkD8=
      with_mean: true
      with_std: true
    relative_time_idx: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - relative_time_idx
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          AAAAAAAAAAA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        5kw/AAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          AAAAAAAA8D8=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          AAAAAAAAAAA=
      with_mean: true
      with_std: true
    time_idx: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - time_idx
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          eUvmYBQa0kA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        5kw/AAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          81LgHEjVxkA=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          al5XsNBKoEE=
      with_mean: true
      with_std: true
  static_categoricals:
  - city
  - post_code
  static_reals:
  - area
  - Bruttoverdienst
  - "Durchschnittsalter der Bev\xF6lkerung"
  - "Erwerbst\xE4tige"
  - Kaufkraft
  - Medianeinkommen
  - "Neubauwohnungen in Ein- und Zweifamilienh\xE4usern"
  - Neubauwohnungen je Einwohner
  - Schuldnerquote
  - "Siedlungsdichte in km\xB2"
  target: Messwert
  target_normalizer: &id012 !!python/object:pytorch_forecasting.data.encoders.GroupNormalizer
    _groups:
    - meter_id
    _method_kwargs: {}
    center: true
    groups:
    - meter_id
    method: standard
    method_kwargs: {}
    missing_:
      center: -2.3503333559936395
      scale: 0.7294167604189381
    norm_: !!python/object:pandas.core.frame.DataFrame
      _flags:
        allows_duplicate_labels: true
      _metadata: []
      _mgr: !!python/object/apply:pandas.core.internals.managers.BlockManager
      - !!python/tuple
        - !!python/object/apply:pandas._libs.internals._unpickle_block
          - !!python/object/apply:numpy._core.multiarray._reconstruct
            args:
            - *id001
            - !!python/tuple
              - 0
            - !!binary |
              Yg==
            state: !!python/tuple
            - 1
            - !!python/tuple
              - 2
              - 115
            - *id003
            - false
            - !!binary |
              8SsUzJyqBsAjAJi7Xqrzv8RleNAkQP+/LEnKoMAX8r8Pz/dQo5gBwACm/Xf3nP6/KYQhIkqEAcDN
              00QIQ1YAwPa1S0pAqAHAMLIaZlEvCcB9Q72J7gUAwFiz2X0lMxDAZlTFE1u0BcDP34q9ZmgEwA3M
              Ehmeifq/U9tH1iPg/r8kAv+SuGUFwNnSNc3hxhjAi85nKVUq/r9tW7JgYaz2v1Y26Yb5azPAVX9o
              AWQ6CsAJBkqupzH6v7Pt67Bf2/S/vUK5SuIsAMCJk8Fz29/8v92oL39e7Py/je4x4D2N+b+Ojwki
              +dj6vx4Ne1zm/fy/owBObWLSBMCcfel6ioMXwAmHh8Ao8/u/6JIOgjzSAsBPXd0IZfv9v60pvCap
              fwPAlcjtl3/7A8B//LSAfIIUwKQCk1Dfdvy/1ZpTMrPUA8B1qW380/IJwHW/MXfW5ALAn4RxjjxP
              /r8t37cK3tkHwBkFOrOrtQfAH6+kv1Tk/79N/QuFAbDxv6A4jxOvXgbAYcNyMYeE/79dhhWTe80C
              wEjqSXbl9QDAcwUl+a9z/L8XdoDrOccFwIjiCTwb8AbAMMwtK9kA8L8Pe17eSv0DwF/B+oBPuf+/
              cZ7QxvRNAsC2dyolkrMDwDyiczuR/Pu/E2z0344S+7/O+pip4YwDwNRfHXxW4QLA3LLBQEm+CcBE
              FxjP+L4DwJIoQbNQaALA/uNzONEVA8Acnmi3IrT+vyDstOI+YP2/jwLCr21KBMA3R1bsqqsCwOc3
              wDFgLyXAo8h4BHoJEcBi86kSHcAEwFSYrVar0QHAqv3tKNPMBMD4f45+N6YFwJxOgmyYsPm/JM3m
              VVtpAcDikHKzohQAwHN7X2lK+gPAfeNhNi39BcClBQ6JgIcGwEZsJ54tSwDA9EJy5VgDAMDDwari
              MAYDwM+Fcg3P5wHACC/USi9EBMAiL/rgeyIIwAXaeupCYQ3Aex3RxTTgAMBi6g3fZ+UCwF6WzP5E
              +gLA2/Vnq3X9BcD+yEs3cYoFwNBJxAlClvW/dmLjRS0uCMDwAvIRh7EFwDmwyl0o1wTA+6v/y/nr
              /L82Nkht6zz/v9lyHxzDPwXA4p7F2RUSAsAgZo4bEEkBwBqrlRSfowPAaw7WcZUSAMDs4fRtM7v6
              v4R/EpPymQLA5C1vfT+0B8AopL/2Af8CwDZ3wK22hQXA/UuOTRdqBcD7PaWUn8MDwDp62JiOI/+/
              C2MIbwY7/b9TKXMrUdjoP+RobbRGKwRAsQJjYSoI6D9eqDj3ZjPkP0zTC5Xzjeg/ycEXamvN5T9O
              jdGhnELgP5aRIj1TnuU/PfW7s8YH3D+FnV6R1HnyPwvPdfiVc/I/xrIyoxT88D+BcerQVbXjP96P
              cOQ1q+g/3aKNR/Wh6D/nO1nqjWXlP7TyNW7my+Y/gWcCKPlMJECmyFndDCbjP3ODdb60EOw/BF9t
              B2WJLkAlo8LnvE30P1sutFyWE94/KwwEh+oi5D+qiycQdTTwPxXn2AGkreI/kHedVVlz5z+X4F1l
              3w/pP8zLbXCdWOE/aO9Ox8nx5j8WNqxRFEDnP6UeH8PHbyRAMT9llMPM6T9MK2k+Pf/mP6oF+Lm+
              Zuc/WyRK3hNE4j+0G5dyQU/wP4zQIFTALSJAZZiV+4+Y4j/524InRKfhPy9Bk7mc2PE/MKrgmQRS
              4j9Z2RdVjX3qP98Sq+glC+o/bmESW1WC6z+gmHq3JM8BQDy+Ua/WieY/k5ji74C88j8iz5L7ixza
              P3Q2irB1Bec/WOpk0WFX5z+6lVLZWE/kP+ZHU7iT0ec/NnK5GwxYCUDg6KuV3yvePz6jR6pCNeQ/
              AbUEmHbA5z9Up8cxKOvtP+wvvvuf9+U/TnrsZQtf6T9ca/uUHNvgP6QZmv0WQOQ/gGbpZSmc5D+l
              Rg2NI5T2PwFLLQofvuU/d9zecaiQ4j8lsxjzsKXjPy183LvwzeI/yQX3fCAP4j+uqaNOggDkP84e
              0YBP8+I/ax5ucEPgLECa4mcaRYMXQAuv2pMEVNo/3ibv7cjU5T9To61hxUL1P1zQ1N+oWPI/o1tr
              S9Zp5T/n9yjpYSjmP8JynEpEHuc/L5gRg14O6z9Ii/E3N6LrP/2d3XBbpf8/f5DOwK8Q6T/T+zWo
              36vqPyRDx3j0s+M/Cm880f0FyT8KSjlwc+noP4M8hmeIwPA/8JuJ9RLk8z/MSYZjIhbfP2SPgTB0
              Cug/IQg83nii5T+0ZF7cUv39Py+eVOrVf+w/CTGBUd9/4j/50MUNNnr9PxPoIpC/oe0//RzIXmkv
              6j8F60TIXpznP379nLsAk+I/GxieSSoB5T9j6SH/tQ3kP9oLEt7DhO8/6XFPyYWk8z+w9JmA1wDl
              PzOBBKKcnuI/GG1fg82m5D9488IdassUQEDp7iZW5es/QxgvxNeS5T/5FbigcHnjP92j6vavT/M/
              VVwNbla05j+2nanl403nPw==
          - !!python/object/apply:builtins.slice
            - 0
            - 2
            - 1
          - 2
      - - !!python/object/apply:pandas.core.indexes.base._new_Index
          - &id005 !!python/name:pandas.core.indexes.base.Index ''
          - data: !!python/object/apply:numpy._core.multiarray._reconstruct
              args:
              - *id001
              - !!python/tuple
                - 0
              - !!binary |
                Yg==
              state: !!python/tuple
              - 1
              - !!python/tuple
                - 2
              - *id004
              - false
              - - center
                - scale
            name: null
        - !!python/object/apply:pandas.core.indexes.base._new_Index
          - *id005
          - data: !!python/object/apply:numpy._core.multiarray._reconstruct
              args:
              - *id001
              - !!python/tuple
                - 0
              - !!binary |
                Yg==
              state: !!python/tuple
              - 1
              - !!python/tuple
                - 115
              - *id002
              - false
              - !!binary |
                AAAAAAAAAAABAAAAAAAAAAIAAAAAAAAAAwAAAAAAAAAEAAAAAAAAAAUAAAAAAAAABgAAAAAAAAAH
                AAAAAAAAAAgAAAAAAAAACQAAAAAAAAAKAAAAAAAAAAsAAAAAAAAADAAAAAAAAAANAAAAAAAAAA4A
                AAAAAAAADwAAAAAAAAAQAAAAAAAAABEAAAAAAAAAEgAAAAAAAAATAAAAAAAAABQAAAAAAAAAFQAA
                AAAAAAAWAAAAAAAAABcAAAAAAAAAGAAAAAAAAAAZAAAAAAAAABoAAAAAAAAAGwAAAAAAAAAcAAAA
                AAAAAB0AAAAAAAAAHgAAAAAAAAAfAAAAAAAAACAAAAAAAAAAIQAAAAAAAAAiAAAAAAAAACMAAAAA
                AAAAJAAAAAAAAAAlAAAAAAAAACYAAAAAAAAAJwAAAAAAAAAoAAAAAAAAACkAAAAAAAAAKgAAAAAA
                AAArAAAAAAAAACwAAAAAAAAALQAAAAAAAAAuAAAAAAAAAC8AAAAAAAAAMAAAAAAAAAAxAAAAAAAA
                ADIAAAAAAAAAMwAAAAAAAAA0AAAAAAAAADUAAAAAAAAANgAAAAAAAAA3AAAAAAAAADgAAAAAAAAA
                OQAAAAAAAAA6AAAAAAAAADsAAAAAAAAAPAAAAAAAAAA9AAAAAAAAAD4AAAAAAAAAPwAAAAAAAABA
                AAAAAAAAAEEAAAAAAAAAQgAAAAAAAABDAAAAAAAAAEQAAAAAAAAARQAAAAAAAABGAAAAAAAAAEcA
                AAAAAAAASAAAAAAAAABJAAAAAAAAAEoAAAAAAAAASwAAAAAAAABMAAAAAAAAAE0AAAAAAAAATgAA
                AAAAAABPAAAAAAAAAFAAAAAAAAAAUQAAAAAAAABSAAAAAAAAAFMAAAAAAAAAVAAAAAAAAABVAAAA
                AAAAAFYAAAAAAAAAVwAAAAAAAABYAAAAAAAAAFkAAAAAAAAAWgAAAAAAAABbAAAAAAAAAFwAAAAA
                AAAAXQAAAAAAAABeAAAAAAAAAF8AAAAAAAAAYAAAAAAAAABhAAAAAAAAAGIAAAAAAAAAYwAAAAAA
                AABkAAAAAAAAAGUAAAAAAAAAZgAAAAAAAABnAAAAAAAAAGgAAAAAAAAAaQAAAAAAAABqAAAAAAAA
                AGsAAAAAAAAAbAAAAAAAAABtAAAAAAAAAG4AAAAAAAAAbwAAAAAAAABwAAAAAAAAAHEAAAAAAAAA
                cgAAAAAAAAA=
            name: meter_id
      _typ: dataframe
      attrs: {}
    scale_by_group: false
    transformation: softplus
  time_idx: time_idx
  time_varying_known_categoricals:
  - is_holiday
  - month
  - weekday
  - hour
  time_varying_known_reals:
  - time_idx
  - cloud_cover_total
  - humidity
  time_varying_unknown_categoricals: []
  time_varying_unknown_reals:
  - Messwert
  variable_groups: null
  weight: null
dropout: 0.2
embedding_labels:
  city: *id006
  hour: *id007
  is_holiday: *id008
  month: *id009
  post_code: *id010
  weekday: *id011
embedding_paddings: []
embedding_sizes:
  city: !!python/tuple
  - 104
  - 22
  hour: !!python/tuple
  - 24
  - 9
  is_holiday: !!python/tuple
  - 2
  - 1
  month: !!python/tuple
  - 12
  - 6
  post_code: !!python/tuple
  - 109
  - 22
  weekday: !!python/tuple
  - 7
  - 5
hidden_continuous_size: 16
hidden_continuous_sizes: {}
hidden_size: 32
learning_rate: 0.0001
log_gradient_flow: false
log_interval: 1
log_val_interval: null
lstm_layers: 2
mask_bias: -1000000000.0
max_encoder_length: 72
monotone_constaints: {}
monotone_constraints: {}
optimizer: adam
optimizer_params: null
output_size: 7
output_transformer: *id012
reduce_on_plateau_min_lr: 1.0e-05
reduce_on_plateau_patience: 4
reduce_on_plateau_reduction: 2.0
share_single_variable_networks: false
static_categoricals:
- city
- post_code
static_reals:
- area
- Bruttoverdienst
- "Durchschnittsalter der Bev\xF6lkerung"
- "Erwerbst\xE4tige"
- Kaufkraft
- Medianeinkommen
- "Neubauwohnungen in Ein- und Zweifamilienh\xE4usern"
- Neubauwohnungen je Einwohner
- Schuldnerquote
- "Siedlungsdichte in km\xB2"
- encoder_length
- Messwert_center
- Messwert_scale
time_varying_categoricals_decoder:
- is_holiday
- month
- weekday
- hour
time_varying_categoricals_encoder:
- is_holiday
- month
- weekday
- hour
time_varying_reals_decoder:
- time_idx
- cloud_cover_total
- humidity
- relative_time_idx
time_varying_reals_encoder:
- time_idx
- cloud_cover_total
- humidity
- relative_time_idx
- Messwert
weight_decay: 0.0
x_categoricals:
- city
- post_code
- is_holiday
- month
- weekday
- hour
x_reals:
- area
- Bruttoverdienst
- "Durchschnittsalter der Bev\xF6lkerung"
- "Erwerbst\xE4tige"
- Kaufkraft
- Medianeinkommen
- "Neubauwohnungen in Ein- und Zweifamilienh\xE4usern"
- Neubauwohnungen je Einwohner
- Schuldnerquote
- "Siedlungsdichte in km\xB2"
- encoder_length
- Messwert_center
- Messwert_scale
- time_idx
- cloud_cover_total
- humidity
- relative_time_idx
- Messwert
